{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Customer Churn Prediction with XGBoost\n",
    "_**Using Gradient Boosted Trees to Predict Mobile Customer Departure**_\n",
    "\n",
    "---\n",
    "\n",
    "---\n",
    "\n",
    "## Contents\n",
    "\n",
    "1. [Background](#Background)\n",
    "1. [Setup](#Setup)\n",
    "1. [Data](#Data)\n",
    "1. [Train](#Train)\n",
    "1. [Host](#Host)\n",
    "  1. [Evaluate](#Evaluate)\n",
    "  1. [Relative cost of errors](#Relative-cost-of-errors)\n",
    "1. [Extensions](#Extensions)\n",
    "\n",
    "---\n",
    "\n",
    "## Background\n",
    "\n",
    "_This notebook has been adapted from an [AWS blog post](https://aws.amazon.com/blogs/ai/predicting-customer-churn-with-amazon-machine-learning/)_\n",
    "\n",
    "Losing customers is costly for any business.  Identifying unhappy customers early on gives you a chance to offer them incentives to stay.  This notebook describes using machine learning (ML) for the automated identification of unhappy customers, also known as customer churn prediction. ML models rarely give perfect predictions though, so this notebook is also about how to incorporate the relative costs of prediction mistakes when determining the financial outcome of using ML.\n",
    "\n",
    "We use an example of churn that is familiar to all of us–leaving a mobile phone operator.  Seems like I can always find fault with my provider du jour! And if my provider knows that I’m thinking of leaving, it can offer timely incentives–I can always use a phone upgrade or perhaps have a new feature activated–and I might just stick around. Incentives are often much more cost effective than losing and reacquiring a customer.\n",
    "\n",
    "---\n",
    "\n",
    "## Setup\n",
    "\n",
    "_This notebook was created and tested on an ml.m4.xlarge notebook instance._\n",
    "\n",
    "Let's start by specifying:\n",
    "\n",
    "- The S3 bucket and prefix that you want to use for training and model data.  This should be within the same region as the Notebook Instance, training, and hosting.\n",
    "- The IAM role arn used to give training and hosting access to your data. See the documentation for how to create these.  Note, if more than one role is required for notebook instances, training, and/or hosting, please replace the boto regexp with a the appropriate full IAM role arn string(s)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "isConfigCell": true
   },
   "outputs": [],
   "source": [
    "bucket = 'creditcard-xgboost'\n",
    "prefix = 'sagemaker/homecredit-risk'\n",
    "\n",
    "# Define IAM role\n",
    "import boto3\n",
    "import re\n",
    "from sagemaker import get_execution_role\n",
    "\n",
    "role = get_execution_role()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we'll import the Python libraries we'll need for the remainder of the exercise."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import io\n",
    "import os\n",
    "import sys\n",
    "import time\n",
    "import json\n",
    "from IPython.display import display\n",
    "from time import strftime, gmtime\n",
    "import sagemaker\n",
    "from sagemaker.predictor import csv_serializer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "## Data\n",
    "\n",
    "Mobile operators have historical records on which customers ultimately ended up churning and which continued using the service. We can use this historical information to construct an ML model of one mobile operator’s churn using a process called training. After training the model, we can pass the profile information of an arbitrary customer (the same profile information that we used to train the model) to the model, and have the model predict whether this customer is going to churn. Of course, we expect the model to make mistakes–after all, predicting the future is tricky business! But I’ll also show how to deal with prediction errors.\n",
    "\n",
    "The dataset we use is publicly available and was mentioned in the book [Discovering Knowledge in Data](https://www.amazon.com/dp/0470908742/) by Daniel T. Larose. It is attributed by the author to the University of California Irvine Repository of Machine Learning Datasets.  Let's download and read that dataset in now:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data_key_train = 'application_train.csv'\n",
    "data_location = 's3://{}/{}'.format(bucket, data_key_train)\n",
    "\n",
    "train=pd.read_csv(data_location)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SK_ID_CURR</th>\n",
       "      <th>TARGET</th>\n",
       "      <th>NAME_CONTRACT_TYPE</th>\n",
       "      <th>CODE_GENDER</th>\n",
       "      <th>FLAG_OWN_CAR</th>\n",
       "      <th>FLAG_OWN_REALTY</th>\n",
       "      <th>CNT_CHILDREN</th>\n",
       "      <th>AMT_INCOME_TOTAL</th>\n",
       "      <th>AMT_CREDIT</th>\n",
       "      <th>AMT_ANNUITY</th>\n",
       "      <th>...</th>\n",
       "      <th>FLAG_DOCUMENT_18</th>\n",
       "      <th>FLAG_DOCUMENT_19</th>\n",
       "      <th>FLAG_DOCUMENT_20</th>\n",
       "      <th>FLAG_DOCUMENT_21</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_MON</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100002</td>\n",
       "      <td>1</td>\n",
       "      <td>Cash loans</td>\n",
       "      <td>M</td>\n",
       "      <td>N</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>202500.0</td>\n",
       "      <td>406597.5</td>\n",
       "      <td>24700.5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100003</td>\n",
       "      <td>0</td>\n",
       "      <td>Cash loans</td>\n",
       "      <td>F</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>270000.0</td>\n",
       "      <td>1293502.5</td>\n",
       "      <td>35698.5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100004</td>\n",
       "      <td>0</td>\n",
       "      <td>Revolving loans</td>\n",
       "      <td>M</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>67500.0</td>\n",
       "      <td>135000.0</td>\n",
       "      <td>6750.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100006</td>\n",
       "      <td>0</td>\n",
       "      <td>Cash loans</td>\n",
       "      <td>F</td>\n",
       "      <td>N</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>135000.0</td>\n",
       "      <td>312682.5</td>\n",
       "      <td>29686.5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100007</td>\n",
       "      <td>0</td>\n",
       "      <td>Cash loans</td>\n",
       "      <td>M</td>\n",
       "      <td>N</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>121500.0</td>\n",
       "      <td>513000.0</td>\n",
       "      <td>21865.5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 122 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   SK_ID_CURR  TARGET NAME_CONTRACT_TYPE CODE_GENDER FLAG_OWN_CAR  \\\n",
       "0      100002       1         Cash loans           M            N   \n",
       "1      100003       0         Cash loans           F            N   \n",
       "2      100004       0    Revolving loans           M            Y   \n",
       "3      100006       0         Cash loans           F            N   \n",
       "4      100007       0         Cash loans           M            N   \n",
       "\n",
       "  FLAG_OWN_REALTY  CNT_CHILDREN  AMT_INCOME_TOTAL  AMT_CREDIT  AMT_ANNUITY  \\\n",
       "0               Y             0          202500.0    406597.5      24700.5   \n",
       "1               N             0          270000.0   1293502.5      35698.5   \n",
       "2               Y             0           67500.0    135000.0       6750.0   \n",
       "3               Y             0          135000.0    312682.5      29686.5   \n",
       "4               Y             0          121500.0    513000.0      21865.5   \n",
       "\n",
       "              ...              FLAG_DOCUMENT_18 FLAG_DOCUMENT_19  \\\n",
       "0             ...                             0                0   \n",
       "1             ...                             0                0   \n",
       "2             ...                             0                0   \n",
       "3             ...                             0                0   \n",
       "4             ...                             0                0   \n",
       "\n",
       "  FLAG_DOCUMENT_20 FLAG_DOCUMENT_21 AMT_REQ_CREDIT_BUREAU_HOUR  \\\n",
       "0                0                0                        0.0   \n",
       "1                0                0                        0.0   \n",
       "2                0                0                        0.0   \n",
       "3                0                0                        NaN   \n",
       "4                0                0                        0.0   \n",
       "\n",
       "  AMT_REQ_CREDIT_BUREAU_DAY  AMT_REQ_CREDIT_BUREAU_WEEK  \\\n",
       "0                       0.0                         0.0   \n",
       "1                       0.0                         0.0   \n",
       "2                       0.0                         0.0   \n",
       "3                       NaN                         NaN   \n",
       "4                       0.0                         0.0   \n",
       "\n",
       "   AMT_REQ_CREDIT_BUREAU_MON  AMT_REQ_CREDIT_BUREAU_QRT  \\\n",
       "0                        0.0                        0.0   \n",
       "1                        0.0                        0.0   \n",
       "2                        0.0                        0.0   \n",
       "3                        NaN                        NaN   \n",
       "4                        0.0                        0.0   \n",
       "\n",
       "   AMT_REQ_CREDIT_BUREAU_YEAR  \n",
       "0                         1.0  \n",
       "1                         0.0  \n",
       "2                         0.0  \n",
       "3                         NaN  \n",
       "4                         0.0  \n",
       "\n",
       "[5 rows x 122 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head()\n",
    "train = train.drop('SK_ID_CURR', axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see immediately that:\n",
    "- `State` appears to be quite evenly distributed\n",
    "- `Phone` takes on too many unique values to be of any practical use.  It's possible parsing out the prefix could have some value, but without more context on how these are allocated, we should avoid using it.\n",
    "- Only 14% of customers churned, so there is some class imabalance, but nothing extreme.\n",
    "- Most of the numeric features are surprisingly nicely distributed, with many showing bell-like gaussianity.  `VMail Message` being a notable exception (and `Area Code` showing up as a feature we should convert to non-numeric)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next let's look at the relationship between each of the features and our target variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NAME_CONTRACT_TYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Cash loans</th>\n",
       "      <td>0.9021</td>\n",
       "      <td>0.935388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Revolving loans</th>\n",
       "      <td>0.0979</td>\n",
       "      <td>0.064612</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                   0         1\n",
       "NAME_CONTRACT_TYPE                  \n",
       "Cash loans          0.9021  0.935388\n",
       "Revolving loans     0.0979  0.064612"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CODE_GENDER</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>F</th>\n",
       "      <td>0.666032</td>\n",
       "      <td>0.570796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>M</th>\n",
       "      <td>0.333954</td>\n",
       "      <td>0.429204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>XNA</th>\n",
       "      <td>0.000014</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET              0         1\n",
       "CODE_GENDER                    \n",
       "F            0.666032  0.570796\n",
       "M            0.333954  0.429204\n",
       "XNA          0.000014  0.000000"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_OWN_CAR</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>N</th>\n",
       "      <td>0.656824</td>\n",
       "      <td>0.694824</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Y</th>\n",
       "      <td>0.343176</td>\n",
       "      <td>0.305176</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET               0         1\n",
       "FLAG_OWN_CAR                    \n",
       "N             0.656824  0.694824\n",
       "Y             0.343176  0.305176"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_OWN_REALTY</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>N</th>\n",
       "      <td>0.305487</td>\n",
       "      <td>0.315891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Y</th>\n",
       "      <td>0.694513</td>\n",
       "      <td>0.684109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                  0         1\n",
       "FLAG_OWN_REALTY                    \n",
       "N                0.305487  0.315891\n",
       "Y                0.694513  0.684109"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NAME_TYPE_SUITE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Children</th>\n",
       "      <td>0.010751</td>\n",
       "      <td>0.009735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <td>0.131953</td>\n",
       "      <td>0.121551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Group of people</th>\n",
       "      <td>0.000881</td>\n",
       "      <td>0.000929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other_A</th>\n",
       "      <td>0.002807</td>\n",
       "      <td>0.003070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other_B</th>\n",
       "      <td>0.005670</td>\n",
       "      <td>0.007029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Spouse, partner</th>\n",
       "      <td>0.037216</td>\n",
       "      <td>0.036154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Unaccompanied</th>\n",
       "      <td>0.810722</td>\n",
       "      <td>0.821531</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                  0         1\n",
       "NAME_TYPE_SUITE                    \n",
       "Children         0.010751  0.009735\n",
       "Family           0.131953  0.121551\n",
       "Group of people  0.000881  0.000929\n",
       "Other_A          0.002807  0.003070\n",
       "Other_B          0.005670  0.007029\n",
       "Spouse, partner  0.037216  0.036154\n",
       "Unaccompanied    0.810722  0.821531"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NAME_INCOME_TYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Businessman</th>\n",
       "      <td>0.000035</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Commercial associate</th>\n",
       "      <td>0.234384</td>\n",
       "      <td>0.215911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Maternity leave</th>\n",
       "      <td>0.000011</td>\n",
       "      <td>0.000081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pensioner</th>\n",
       "      <td>0.185294</td>\n",
       "      <td>0.120121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>State servant</th>\n",
       "      <td>0.072356</td>\n",
       "      <td>0.050312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Student</th>\n",
       "      <td>0.000064</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Unemployed</th>\n",
       "      <td>0.000050</td>\n",
       "      <td>0.000322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Working</th>\n",
       "      <td>0.507807</td>\n",
       "      <td>0.613253</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                       0         1\n",
       "NAME_INCOME_TYPE                        \n",
       "Businessman           0.000035  0.000000\n",
       "Commercial associate  0.234384  0.215911\n",
       "Maternity leave       0.000011  0.000081\n",
       "Pensioner             0.185294  0.120121\n",
       "State servant         0.072356  0.050312\n",
       "Student               0.000064  0.000000\n",
       "Unemployed            0.000050  0.000322\n",
       "Working               0.507807  0.613253"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NAME_EDUCATION_TYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Academic degree</th>\n",
       "      <td>0.000570</td>\n",
       "      <td>0.000121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Higher education</th>\n",
       "      <td>0.250646</td>\n",
       "      <td>0.161490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Incomplete higher</th>\n",
       "      <td>0.033270</td>\n",
       "      <td>0.035126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lower secondary</th>\n",
       "      <td>0.012024</td>\n",
       "      <td>0.016798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Secondary / secondary special</th>\n",
       "      <td>0.703491</td>\n",
       "      <td>0.786465</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                                0         1\n",
       "NAME_EDUCATION_TYPE                              \n",
       "Academic degree                0.000570  0.000121\n",
       "Higher education               0.250646  0.161490\n",
       "Incomplete higher              0.033270  0.035126\n",
       "Lower secondary                0.012024  0.016798\n",
       "Secondary / secondary special  0.703491  0.786465"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NAME_FAMILY_STATUS</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Civil marriage</th>\n",
       "      <td>0.094854</td>\n",
       "      <td>0.119275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married</th>\n",
       "      <td>0.642345</td>\n",
       "      <td>0.598187</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Separated</th>\n",
       "      <td>0.064206</td>\n",
       "      <td>0.065257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single / not married</th>\n",
       "      <td>0.144991</td>\n",
       "      <td>0.179537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Unknown</th>\n",
       "      <td>0.000007</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Widow</th>\n",
       "      <td>0.053597</td>\n",
       "      <td>0.037744</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                       0         1\n",
       "NAME_FAMILY_STATUS                      \n",
       "Civil marriage        0.094854  0.119275\n",
       "Married               0.642345  0.598187\n",
       "Separated             0.064206  0.065257\n",
       "Single / not married  0.144991  0.179537\n",
       "Unknown               0.000007  0.000000\n",
       "Widow                 0.053597  0.037744"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NAME_HOUSING_TYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Co-op apartment</th>\n",
       "      <td>0.003654</td>\n",
       "      <td>0.003585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>House / apartment</th>\n",
       "      <td>0.890019</td>\n",
       "      <td>0.856878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Municipal apartment</th>\n",
       "      <td>0.036181</td>\n",
       "      <td>0.038469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Office apartment</th>\n",
       "      <td>0.008649</td>\n",
       "      <td>0.006928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rented apartment</th>\n",
       "      <td>0.015140</td>\n",
       "      <td>0.024209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>With parents</th>\n",
       "      <td>0.046355</td>\n",
       "      <td>0.069930</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                      0         1\n",
       "NAME_HOUSING_TYPE                      \n",
       "Co-op apartment      0.003654  0.003585\n",
       "House / apartment    0.890019  0.856878\n",
       "Municipal apartment  0.036181  0.038469\n",
       "Office apartment     0.008649  0.006928\n",
       "Rented apartment     0.015140  0.024209\n",
       "With parents         0.046355  0.069930"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OCCUPATION_TYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accountants</th>\n",
       "      <td>0.048496</td>\n",
       "      <td>0.025557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cleaning staff</th>\n",
       "      <td>0.021841</td>\n",
       "      <td>0.024101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cooking staff</th>\n",
       "      <td>0.027652</td>\n",
       "      <td>0.033483</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Core staff</th>\n",
       "      <td>0.134141</td>\n",
       "      <td>0.093708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Drivers</th>\n",
       "      <td>0.085661</td>\n",
       "      <td>0.113603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HR staff</th>\n",
       "      <td>0.002737</td>\n",
       "      <td>0.001941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>High skill tech staff</th>\n",
       "      <td>0.055454</td>\n",
       "      <td>0.037796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IT staff</th>\n",
       "      <td>0.002555</td>\n",
       "      <td>0.001833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Laborers</th>\n",
       "      <td>0.256256</td>\n",
       "      <td>0.314768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low-skill Laborers</th>\n",
       "      <td>0.009004</td>\n",
       "      <td>0.019356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Managers</th>\n",
       "      <td>0.104080</td>\n",
       "      <td>0.071602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Medicine staff</th>\n",
       "      <td>0.041361</td>\n",
       "      <td>0.030841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Private service staff</th>\n",
       "      <td>0.012863</td>\n",
       "      <td>0.009435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Realty agents</th>\n",
       "      <td>0.003593</td>\n",
       "      <td>0.003181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sales staff</th>\n",
       "      <td>0.150644</td>\n",
       "      <td>0.166712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Secretaries</th>\n",
       "      <td>0.006299</td>\n",
       "      <td>0.004960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Security staff</th>\n",
       "      <td>0.031152</td>\n",
       "      <td>0.038928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Waiters/barmen staff</th>\n",
       "      <td>0.006211</td>\n",
       "      <td>0.008195</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                        0         1\n",
       "OCCUPATION_TYPE                          \n",
       "Accountants            0.048496  0.025557\n",
       "Cleaning staff         0.021841  0.024101\n",
       "Cooking staff          0.027652  0.033483\n",
       "Core staff             0.134141  0.093708\n",
       "Drivers                0.085661  0.113603\n",
       "HR staff               0.002737  0.001941\n",
       "High skill tech staff  0.055454  0.037796\n",
       "IT staff               0.002555  0.001833\n",
       "Laborers               0.256256  0.314768\n",
       "Low-skill Laborers     0.009004  0.019356\n",
       "Managers               0.104080  0.071602\n",
       "Medicine staff         0.041361  0.030841\n",
       "Private service staff  0.012863  0.009435\n",
       "Realty agents          0.003593  0.003181\n",
       "Sales staff            0.150644  0.166712\n",
       "Secretaries            0.006299  0.004960\n",
       "Security staff         0.031152  0.038928\n",
       "Waiters/barmen staff   0.006211  0.008195"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WEEKDAY_APPR_PROCESS_START</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>FRIDAY</th>\n",
       "      <td>0.163563</td>\n",
       "      <td>0.165196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MONDAY</th>\n",
       "      <td>0.165484</td>\n",
       "      <td>0.158469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SATURDAY</th>\n",
       "      <td>0.110306</td>\n",
       "      <td>0.107553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SUNDAY</th>\n",
       "      <td>0.052702</td>\n",
       "      <td>0.051682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>THURSDAY</th>\n",
       "      <td>0.164469</td>\n",
       "      <td>0.165076</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TUESDAY</th>\n",
       "      <td>0.174752</td>\n",
       "      <td>0.181309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WEDNESDAY</th>\n",
       "      <td>0.168724</td>\n",
       "      <td>0.170715</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                             0         1\n",
       "WEEKDAY_APPR_PROCESS_START                    \n",
       "FRIDAY                      0.163563  0.165196\n",
       "MONDAY                      0.165484  0.158469\n",
       "SATURDAY                    0.110306  0.107553\n",
       "SUNDAY                      0.052702  0.051682\n",
       "THURSDAY                    0.164469  0.165076\n",
       "TUESDAY                     0.174752  0.181309\n",
       "WEDNESDAY                   0.168724  0.170715"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ORGANIZATION_TYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Advertising</th>\n",
       "      <td>0.001394</td>\n",
       "      <td>0.001410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Agriculture</th>\n",
       "      <td>0.007772</td>\n",
       "      <td>0.010352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bank</th>\n",
       "      <td>0.008409</td>\n",
       "      <td>0.005237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Business Entity Type 1</th>\n",
       "      <td>0.019446</td>\n",
       "      <td>0.019617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Business Entity Type 2</th>\n",
       "      <td>0.034147</td>\n",
       "      <td>0.036254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Business Entity Type 3</th>\n",
       "      <td>0.218154</td>\n",
       "      <td>0.254703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cleaning</th>\n",
       "      <td>0.000817</td>\n",
       "      <td>0.001168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Construction</th>\n",
       "      <td>0.020999</td>\n",
       "      <td>0.031621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Culture</th>\n",
       "      <td>0.001266</td>\n",
       "      <td>0.000846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Electricity</th>\n",
       "      <td>0.003138</td>\n",
       "      <td>0.002538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Emergency</th>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.001611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Government</th>\n",
       "      <td>0.034236</td>\n",
       "      <td>0.029245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hotel</th>\n",
       "      <td>0.003198</td>\n",
       "      <td>0.002497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Housing</th>\n",
       "      <td>0.009633</td>\n",
       "      <td>0.009466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 1</th>\n",
       "      <td>0.003269</td>\n",
       "      <td>0.004632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 10</th>\n",
       "      <td>0.000361</td>\n",
       "      <td>0.000282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 11</th>\n",
       "      <td>0.008738</td>\n",
       "      <td>0.009426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 12</th>\n",
       "      <td>0.001256</td>\n",
       "      <td>0.000564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 13</th>\n",
       "      <td>0.000205</td>\n",
       "      <td>0.000363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 2</th>\n",
       "      <td>0.001503</td>\n",
       "      <td>0.001329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 3</th>\n",
       "      <td>0.010365</td>\n",
       "      <td>0.014018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 4</th>\n",
       "      <td>0.002788</td>\n",
       "      <td>0.003585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 5</th>\n",
       "      <td>0.001974</td>\n",
       "      <td>0.001652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 6</th>\n",
       "      <td>0.000368</td>\n",
       "      <td>0.000322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 7</th>\n",
       "      <td>0.004252</td>\n",
       "      <td>0.004230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 8</th>\n",
       "      <td>0.000074</td>\n",
       "      <td>0.000121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry: type 9</th>\n",
       "      <td>0.011118</td>\n",
       "      <td>0.009063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Insurance</th>\n",
       "      <td>0.001992</td>\n",
       "      <td>0.001370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kindergarten</th>\n",
       "      <td>0.022626</td>\n",
       "      <td>0.019496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Legal Services</th>\n",
       "      <td>0.000994</td>\n",
       "      <td>0.000967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Medicine</th>\n",
       "      <td>0.036988</td>\n",
       "      <td>0.029688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Military</th>\n",
       "      <td>0.008840</td>\n",
       "      <td>0.005438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mobile</th>\n",
       "      <td>0.001019</td>\n",
       "      <td>0.001168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other</th>\n",
       "      <td>0.054506</td>\n",
       "      <td>0.051360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Police</th>\n",
       "      <td>0.007867</td>\n",
       "      <td>0.004713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Postal</th>\n",
       "      <td>0.006987</td>\n",
       "      <td>0.007331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Realtor</th>\n",
       "      <td>0.001252</td>\n",
       "      <td>0.001692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Religion</th>\n",
       "      <td>0.000283</td>\n",
       "      <td>0.000201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Restaurant</th>\n",
       "      <td>0.005656</td>\n",
       "      <td>0.008540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>School</th>\n",
       "      <td>0.029598</td>\n",
       "      <td>0.021188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Security</th>\n",
       "      <td>0.010340</td>\n",
       "      <td>0.013051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Security Ministries</th>\n",
       "      <td>0.006643</td>\n",
       "      <td>0.003867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Self-employed</th>\n",
       "      <td>0.122058</td>\n",
       "      <td>0.157422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Services</th>\n",
       "      <td>0.005204</td>\n",
       "      <td>0.004189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Telecom</th>\n",
       "      <td>0.001885</td>\n",
       "      <td>0.001772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 1</th>\n",
       "      <td>0.001121</td>\n",
       "      <td>0.001249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 2</th>\n",
       "      <td>0.006251</td>\n",
       "      <td>0.005358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 3</th>\n",
       "      <td>0.011076</td>\n",
       "      <td>0.014542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 4</th>\n",
       "      <td>0.000219</td>\n",
       "      <td>0.000081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 5</th>\n",
       "      <td>0.000163</td>\n",
       "      <td>0.000121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 6</th>\n",
       "      <td>0.002130</td>\n",
       "      <td>0.001168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trade: type 7</th>\n",
       "      <td>0.025084</td>\n",
       "      <td>0.029809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Transport: type 1</th>\n",
       "      <td>0.000679</td>\n",
       "      <td>0.000363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Transport: type 2</th>\n",
       "      <td>0.007188</td>\n",
       "      <td>0.006928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Transport: type 3</th>\n",
       "      <td>0.003537</td>\n",
       "      <td>0.007533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Transport: type 4</th>\n",
       "      <td>0.017323</td>\n",
       "      <td>0.020181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>University</th>\n",
       "      <td>0.004464</td>\n",
       "      <td>0.002618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>XNA</th>\n",
       "      <td>0.185308</td>\n",
       "      <td>0.120443</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                         0         1\n",
       "ORGANIZATION_TYPE                         \n",
       "Advertising             0.001394  0.001410\n",
       "Agriculture             0.007772  0.010352\n",
       "Bank                    0.008409  0.005237\n",
       "Business Entity Type 1  0.019446  0.019617\n",
       "Business Entity Type 2  0.034147  0.036254\n",
       "Business Entity Type 3  0.218154  0.254703\n",
       "Cleaning                0.000817  0.001168\n",
       "Construction            0.020999  0.031621\n",
       "Culture                 0.001266  0.000846\n",
       "Electricity             0.003138  0.002538\n",
       "Emergency               0.001839  0.001611\n",
       "Government              0.034236  0.029245\n",
       "Hotel                   0.003198  0.002497\n",
       "Housing                 0.009633  0.009466\n",
       "Industry: type 1        0.003269  0.004632\n",
       "Industry: type 10       0.000361  0.000282\n",
       "Industry: type 11       0.008738  0.009426\n",
       "Industry: type 12       0.001256  0.000564\n",
       "Industry: type 13       0.000205  0.000363\n",
       "Industry: type 2        0.001503  0.001329\n",
       "Industry: type 3        0.010365  0.014018\n",
       "Industry: type 4        0.002788  0.003585\n",
       "Industry: type 5        0.001974  0.001652\n",
       "Industry: type 6        0.000368  0.000322\n",
       "Industry: type 7        0.004252  0.004230\n",
       "Industry: type 8        0.000074  0.000121\n",
       "Industry: type 9        0.011118  0.009063\n",
       "Insurance               0.001992  0.001370\n",
       "Kindergarten            0.022626  0.019496\n",
       "Legal Services          0.000994  0.000967\n",
       "Medicine                0.036988  0.029688\n",
       "Military                0.008840  0.005438\n",
       "Mobile                  0.001019  0.001168\n",
       "Other                   0.054506  0.051360\n",
       "Police                  0.007867  0.004713\n",
       "Postal                  0.006987  0.007331\n",
       "Realtor                 0.001252  0.001692\n",
       "Religion                0.000283  0.000201\n",
       "Restaurant              0.005656  0.008540\n",
       "School                  0.029598  0.021188\n",
       "Security                0.010340  0.013051\n",
       "Security Ministries     0.006643  0.003867\n",
       "Self-employed           0.122058  0.157422\n",
       "Services                0.005204  0.004189\n",
       "Telecom                 0.001885  0.001772\n",
       "Trade: type 1           0.001121  0.001249\n",
       "Trade: type 2           0.006251  0.005358\n",
       "Trade: type 3           0.011076  0.014542\n",
       "Trade: type 4           0.000219  0.000081\n",
       "Trade: type 5           0.000163  0.000121\n",
       "Trade: type 6           0.002130  0.001168\n",
       "Trade: type 7           0.025084  0.029809\n",
       "Transport: type 1       0.000679  0.000363\n",
       "Transport: type 2       0.007188  0.006928\n",
       "Transport: type 3       0.003537  0.007533\n",
       "Transport: type 4       0.017323  0.020181\n",
       "University              0.004464  0.002618\n",
       "XNA                     0.185308  0.120443"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FONDKAPREMONT_MODE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>not specified</th>\n",
       "      <td>0.058089</td>\n",
       "      <td>0.064030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>org spec account</th>\n",
       "      <td>0.058465</td>\n",
       "      <td>0.048806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>reg oper account</th>\n",
       "      <td>0.758739</td>\n",
       "      <td>0.768955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>reg oper spec account</th>\n",
       "      <td>0.124707</td>\n",
       "      <td>0.118209</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                        0         1\n",
       "FONDKAPREMONT_MODE                       \n",
       "not specified          0.058089  0.064030\n",
       "org spec account       0.058465  0.048806\n",
       "reg oper account       0.758739  0.768955\n",
       "reg oper spec account  0.124707  0.118209"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HOUSETYPE_MODE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>block of flats</th>\n",
       "      <td>0.982766</td>\n",
       "      <td>0.976179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>specific housing</th>\n",
       "      <td>0.009452</td>\n",
       "      <td>0.014199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>terraced house</th>\n",
       "      <td>0.007782</td>\n",
       "      <td>0.009622</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                   0         1\n",
       "HOUSETYPE_MODE                      \n",
       "block of flats    0.982766  0.976179\n",
       "specific housing  0.009452  0.014199\n",
       "terraced house    0.007782  0.009622"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WALLSMATERIAL_MODE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Block</th>\n",
       "      <td>0.061181</td>\n",
       "      <td>0.061588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mixed</th>\n",
       "      <td>0.015098</td>\n",
       "      <td>0.016392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Monolithic</th>\n",
       "      <td>0.012054</td>\n",
       "      <td>0.007959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Others</th>\n",
       "      <td>0.010596</td>\n",
       "      <td>0.012791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Panel</th>\n",
       "      <td>0.439836</td>\n",
       "      <td>0.397195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Stone, brick</th>\n",
       "      <td>0.426801</td>\n",
       "      <td>0.454804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wooden</th>\n",
       "      <td>0.034434</td>\n",
       "      <td>0.049270</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                     0         1\n",
       "WALLSMATERIAL_MODE                    \n",
       "Block               0.061181  0.061588\n",
       "Mixed               0.015098  0.016392\n",
       "Monolithic          0.012054  0.007959\n",
       "Others              0.010596  0.012791\n",
       "Panel               0.439836  0.397195\n",
       "Stone, brick        0.426801  0.454804\n",
       "Wooden              0.034434  0.049270"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>TARGET</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EMERGENCYSTATE_MODE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <td>0.986007</td>\n",
       "      <td>0.980313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>0.013993</td>\n",
       "      <td>0.019687</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "TARGET                      0         1\n",
       "EMERGENCYSTATE_MODE                    \n",
       "No                   0.986007  0.980313\n",
       "Yes                  0.013993  0.019687"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TARGET\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "Grouper for 'TARGET' not 1-dimensional",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-15-57652b09e9de>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcolumn\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect_dtypes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'object'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m     \u001b[0mhist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolumn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'TARGET'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mby\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'TARGET'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/plotting/_core.py\u001b[0m in \u001b[0;36mhist_frame\u001b[0;34m(data, column, by, grid, xlabelsize, xrot, ylabelsize, yrot, ax, sharex, sharey, figsize, layout, bins, **kwds)\u001b[0m\n\u001b[1;32m   2164\u001b[0m                             \u001b[0mlayout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlayout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxlabelsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxlabelsize\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2165\u001b[0m                             \u001b[0mxrot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxrot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mylabelsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mylabelsize\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2166\u001b[0;31m                             yrot=yrot, **kwds)\n\u001b[0m\u001b[1;32m   2167\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2168\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/plotting/_core.py\u001b[0m in \u001b[0;36mgrouped_hist\u001b[0;34m(data, column, by, ax, bins, figsize, layout, sharex, sharey, rot, grid, xlabelsize, xrot, ylabelsize, yrot, **kwargs)\u001b[0m\n\u001b[1;32m   2301\u001b[0m     fig, axes = _grouped_plot(plot_group, data, column=column,\n\u001b[1;32m   2302\u001b[0m                               \u001b[0mby\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mby\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msharex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msharex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msharey\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msharey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2303\u001b[0;31m                               figsize=figsize, layout=layout, rot=rot)\n\u001b[0m\u001b[1;32m   2304\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2305\u001b[0m     _set_ticks_props(axes, xlabelsize=xlabelsize, xrot=xrot,\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/plotting/_core.py\u001b[0m in \u001b[0;36m_grouped_plot\u001b[0;34m(plotf, data, column, by, numeric_only, figsize, sharex, sharey, layout, rot, ax, **kwargs)\u001b[0m\n\u001b[1;32m   2401\u001b[0m         \u001b[0mfigsize\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2402\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2403\u001b[0;31m     \u001b[0mgrouped\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mby\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2404\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcolumn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2405\u001b[0m         \u001b[0mgrouped\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrouped\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolumn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mgroupby\u001b[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, **kwargs)\u001b[0m\n\u001b[1;32m   5160\u001b[0m         return groupby(self, by=by, axis=axis, level=level, as_index=as_index,\n\u001b[1;32m   5161\u001b[0m                        \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroup_keys\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgroup_keys\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msqueeze\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5162\u001b[0;31m                        **kwargs)\n\u001b[0m\u001b[1;32m   5163\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5164\u001b[0m     def asfreq(self, freq, method=None, how=None, normalize=False,\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/core/groupby.py\u001b[0m in \u001b[0;36mgroupby\u001b[0;34m(obj, by, **kwds)\u001b[0m\n\u001b[1;32m   1846\u001b[0m         \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'invalid type: %s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1847\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1848\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mklass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mby\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1850\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/core/groupby.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, obj, keys, axis, level, grouper, exclusions, selection, as_index, sort, group_keys, squeeze, **kwargs)\u001b[0m\n\u001b[1;32m    514\u001b[0m                                                     \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    515\u001b[0m                                                     \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 516\u001b[0;31m                                                     mutated=self.mutated)\n\u001b[0m\u001b[1;32m    517\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    518\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/core/groupby.py\u001b[0m in \u001b[0;36m_get_grouper\u001b[0;34m(obj, key, axis, level, sort, mutated, validate)\u001b[0m\n\u001b[1;32m   2955\u001b[0m                         \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2956\u001b[0m                         in_axis=in_axis) \\\n\u001b[0;32m-> 2957\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgpr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mGrouping\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mgpr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2958\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2959\u001b[0m         \u001b[0mgroupings\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mping\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/python3/lib/python3.6/site-packages/pandas/core/groupby.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, index, grouper, obj, name, level, sort, in_axis)\u001b[0m\n\u001b[1;32m   2703\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrouper\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'ndim'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2704\u001b[0m                     \u001b[0mt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrouper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2705\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Grouper for '%s' not 1-dimensional\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2706\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrouper\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrouper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2707\u001b[0m                 if not (hasattr(self.grouper, \"__len__\") and\n",
      "\u001b[0;31mValueError\u001b[0m: Grouper for 'TARGET' not 1-dimensional"
     ]
    }
   ],
   "source": [
    "for column in train.select_dtypes(include=['object']).columns:\n",
    "    if column != 'TARGET':\n",
    "        display(pd.crosstab(index=train[column], columns=train['TARGET'], normalize='columns'))\n",
    "\n",
    "for column in train.select_dtypes(exclude=['object']).columns:\n",
    "    print(column)\n",
    "    hist = train[[column, 'TARGET']].hist(by='TARGET', bins=30)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Interestingly we see that churners appear:\n",
    "- Fairly evenly distributed geographically\n",
    "- More likely to have an international plan\n",
    "- Less likely to have a voicemail plan\n",
    "- To exhibit some bimodality in daily minutes (either higher or lower than the average for non-churners)\n",
    "- To have a larger number of customer service calls (which makes sense as we'd expect customers who experience lots of problems may be more likely to churn)\n",
    "\n",
    "In addition, we see that churners take on very similar distributions for features like `Day Mins` and `Day Charge`.  That's not surprising as we'd expect minutes spent talking to correlate with charges.  Let's dig deeper into the relationships between our features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TARGET</th>\n",
       "      <th>CNT_CHILDREN</th>\n",
       "      <th>AMT_INCOME_TOTAL</th>\n",
       "      <th>AMT_CREDIT</th>\n",
       "      <th>AMT_ANNUITY</th>\n",
       "      <th>AMT_GOODS_PRICE</th>\n",
       "      <th>REGION_POPULATION_RELATIVE</th>\n",
       "      <th>DAYS_BIRTH</th>\n",
       "      <th>DAYS_EMPLOYED</th>\n",
       "      <th>DAYS_REGISTRATION</th>\n",
       "      <th>...</th>\n",
       "      <th>FLAG_DOCUMENT_18</th>\n",
       "      <th>FLAG_DOCUMENT_19</th>\n",
       "      <th>FLAG_DOCUMENT_20</th>\n",
       "      <th>FLAG_DOCUMENT_21</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_MON</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>TARGET</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.019187</td>\n",
       "      <td>-0.003982</td>\n",
       "      <td>-0.030369</td>\n",
       "      <td>-0.012817</td>\n",
       "      <td>-0.039645</td>\n",
       "      <td>-0.037227</td>\n",
       "      <td>0.078239</td>\n",
       "      <td>-0.044932</td>\n",
       "      <td>0.041975</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007952</td>\n",
       "      <td>-0.001358</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.003709</td>\n",
       "      <td>0.000930</td>\n",
       "      <td>0.002704</td>\n",
       "      <td>0.000788</td>\n",
       "      <td>-0.012462</td>\n",
       "      <td>-0.002022</td>\n",
       "      <td>0.019930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CNT_CHILDREN</th>\n",
       "      <td>0.019187</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.012882</td>\n",
       "      <td>0.002145</td>\n",
       "      <td>0.021374</td>\n",
       "      <td>-0.001827</td>\n",
       "      <td>-0.025573</td>\n",
       "      <td>0.330938</td>\n",
       "      <td>-0.239818</td>\n",
       "      <td>0.183395</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004031</td>\n",
       "      <td>0.000864</td>\n",
       "      <td>0.000988</td>\n",
       "      <td>-0.002450</td>\n",
       "      <td>-0.000410</td>\n",
       "      <td>-0.000366</td>\n",
       "      <td>-0.002436</td>\n",
       "      <td>-0.010808</td>\n",
       "      <td>-0.007836</td>\n",
       "      <td>-0.041550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_INCOME_TOTAL</th>\n",
       "      <td>-0.003982</td>\n",
       "      <td>0.012882</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.156870</td>\n",
       "      <td>0.191657</td>\n",
       "      <td>0.159610</td>\n",
       "      <td>0.074796</td>\n",
       "      <td>0.027261</td>\n",
       "      <td>-0.064223</td>\n",
       "      <td>0.027805</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003130</td>\n",
       "      <td>0.002408</td>\n",
       "      <td>0.000242</td>\n",
       "      <td>-0.000589</td>\n",
       "      <td>0.000709</td>\n",
       "      <td>0.002944</td>\n",
       "      <td>0.002387</td>\n",
       "      <td>0.024700</td>\n",
       "      <td>0.004859</td>\n",
       "      <td>0.011690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_CREDIT</th>\n",
       "      <td>-0.030369</td>\n",
       "      <td>0.002145</td>\n",
       "      <td>0.156870</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.770138</td>\n",
       "      <td>0.986968</td>\n",
       "      <td>0.099738</td>\n",
       "      <td>-0.055436</td>\n",
       "      <td>-0.066838</td>\n",
       "      <td>0.009621</td>\n",
       "      <td>...</td>\n",
       "      <td>0.034329</td>\n",
       "      <td>0.021082</td>\n",
       "      <td>0.031023</td>\n",
       "      <td>-0.016148</td>\n",
       "      <td>-0.003906</td>\n",
       "      <td>0.004238</td>\n",
       "      <td>-0.001275</td>\n",
       "      <td>0.054451</td>\n",
       "      <td>0.015925</td>\n",
       "      <td>-0.048448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_ANNUITY</th>\n",
       "      <td>-0.012817</td>\n",
       "      <td>0.021374</td>\n",
       "      <td>0.191657</td>\n",
       "      <td>0.770138</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.775109</td>\n",
       "      <td>0.118429</td>\n",
       "      <td>0.009445</td>\n",
       "      <td>-0.104332</td>\n",
       "      <td>0.038514</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009745</td>\n",
       "      <td>0.004573</td>\n",
       "      <td>0.011718</td>\n",
       "      <td>-0.017598</td>\n",
       "      <td>0.003861</td>\n",
       "      <td>0.002185</td>\n",
       "      <td>0.013881</td>\n",
       "      <td>0.039148</td>\n",
       "      <td>0.010124</td>\n",
       "      <td>-0.011320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_GOODS_PRICE</th>\n",
       "      <td>-0.039645</td>\n",
       "      <td>-0.001827</td>\n",
       "      <td>0.159610</td>\n",
       "      <td>0.986968</td>\n",
       "      <td>0.775109</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.103520</td>\n",
       "      <td>-0.053442</td>\n",
       "      <td>-0.064842</td>\n",
       "      <td>0.011565</td>\n",
       "      <td>...</td>\n",
       "      <td>0.032748</td>\n",
       "      <td>0.020279</td>\n",
       "      <td>0.031640</td>\n",
       "      <td>-0.014486</td>\n",
       "      <td>-0.003237</td>\n",
       "      <td>0.004677</td>\n",
       "      <td>-0.001007</td>\n",
       "      <td>0.056422</td>\n",
       "      <td>0.016432</td>\n",
       "      <td>-0.050998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REGION_POPULATION_RELATIVE</th>\n",
       "      <td>-0.037227</td>\n",
       "      <td>-0.025573</td>\n",
       "      <td>0.074796</td>\n",
       "      <td>0.099738</td>\n",
       "      <td>0.118429</td>\n",
       "      <td>0.103520</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.029582</td>\n",
       "      <td>-0.003980</td>\n",
       "      <td>-0.053820</td>\n",
       "      <td>...</td>\n",
       "      <td>0.013367</td>\n",
       "      <td>0.002364</td>\n",
       "      <td>-0.000045</td>\n",
       "      <td>0.003437</td>\n",
       "      <td>-0.002225</td>\n",
       "      <td>0.001399</td>\n",
       "      <td>-0.002149</td>\n",
       "      <td>0.078607</td>\n",
       "      <td>-0.001279</td>\n",
       "      <td>0.001003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DAYS_BIRTH</th>\n",
       "      <td>0.078239</td>\n",
       "      <td>0.330938</td>\n",
       "      <td>0.027261</td>\n",
       "      <td>-0.055436</td>\n",
       "      <td>0.009445</td>\n",
       "      <td>-0.053442</td>\n",
       "      <td>-0.029582</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.615864</td>\n",
       "      <td>0.331912</td>\n",
       "      <td>...</td>\n",
       "      <td>0.044498</td>\n",
       "      <td>0.003614</td>\n",
       "      <td>0.009015</td>\n",
       "      <td>0.027282</td>\n",
       "      <td>0.005285</td>\n",
       "      <td>0.002255</td>\n",
       "      <td>-0.001336</td>\n",
       "      <td>0.001372</td>\n",
       "      <td>-0.011799</td>\n",
       "      <td>-0.071983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DAYS_EMPLOYED</th>\n",
       "      <td>-0.044932</td>\n",
       "      <td>-0.239818</td>\n",
       "      <td>-0.064223</td>\n",
       "      <td>-0.066838</td>\n",
       "      <td>-0.104332</td>\n",
       "      <td>-0.064842</td>\n",
       "      <td>-0.003980</td>\n",
       "      <td>-0.615864</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.210242</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.040396</td>\n",
       "      <td>-0.010040</td>\n",
       "      <td>-0.010135</td>\n",
       "      <td>-0.008396</td>\n",
       "      <td>-0.004735</td>\n",
       "      <td>0.000472</td>\n",
       "      <td>0.003072</td>\n",
       "      <td>-0.034457</td>\n",
       "      <td>0.015345</td>\n",
       "      <td>0.049988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DAYS_REGISTRATION</th>\n",
       "      <td>0.041975</td>\n",
       "      <td>0.183395</td>\n",
       "      <td>0.027805</td>\n",
       "      <td>0.009621</td>\n",
       "      <td>0.038514</td>\n",
       "      <td>0.011565</td>\n",
       "      <td>-0.053820</td>\n",
       "      <td>0.331912</td>\n",
       "      <td>-0.210242</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.017040</td>\n",
       "      <td>0.004764</td>\n",
       "      <td>0.006971</td>\n",
       "      <td>0.003859</td>\n",
       "      <td>-0.002855</td>\n",
       "      <td>-0.000508</td>\n",
       "      <td>-0.001069</td>\n",
       "      <td>-0.011353</td>\n",
       "      <td>-0.001308</td>\n",
       "      <td>-0.024805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DAYS_ID_PUBLISH</th>\n",
       "      <td>0.051457</td>\n",
       "      <td>-0.028019</td>\n",
       "      <td>0.008506</td>\n",
       "      <td>-0.006575</td>\n",
       "      <td>0.011268</td>\n",
       "      <td>-0.009267</td>\n",
       "      <td>-0.003993</td>\n",
       "      <td>0.272691</td>\n",
       "      <td>-0.272378</td>\n",
       "      <td>0.101896</td>\n",
       "      <td>...</td>\n",
       "      <td>0.014084</td>\n",
       "      <td>0.000903</td>\n",
       "      <td>0.000070</td>\n",
       "      <td>0.017246</td>\n",
       "      <td>0.004761</td>\n",
       "      <td>-0.000999</td>\n",
       "      <td>-0.001249</td>\n",
       "      <td>-0.009660</td>\n",
       "      <td>-0.006200</td>\n",
       "      <td>-0.035099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OWN_CAR_AGE</th>\n",
       "      <td>0.037612</td>\n",
       "      <td>0.008494</td>\n",
       "      <td>-0.117273</td>\n",
       "      <td>-0.094191</td>\n",
       "      <td>-0.097057</td>\n",
       "      <td>-0.103733</td>\n",
       "      <td>-0.081429</td>\n",
       "      <td>0.005761</td>\n",
       "      <td>0.028830</td>\n",
       "      <td>-0.025991</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.011043</td>\n",
       "      <td>-0.004992</td>\n",
       "      <td>-0.007458</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>-0.000202</td>\n",
       "      <td>-0.008650</td>\n",
       "      <td>0.001661</td>\n",
       "      <td>-0.021867</td>\n",
       "      <td>-0.017632</td>\n",
       "      <td>-0.014384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_MOBIL</th>\n",
       "      <td>0.000534</td>\n",
       "      <td>0.001041</td>\n",
       "      <td>0.000325</td>\n",
       "      <td>0.001436</td>\n",
       "      <td>0.000149</td>\n",
       "      <td>0.001399</td>\n",
       "      <td>0.001333</td>\n",
       "      <td>-0.003084</td>\n",
       "      <td>0.000818</td>\n",
       "      <td>-0.000100</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.019919</td>\n",
       "      <td>0.000044</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>0.000033</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_EMP_PHONE</th>\n",
       "      <td>0.045982</td>\n",
       "      <td>0.240714</td>\n",
       "      <td>0.063994</td>\n",
       "      <td>0.065519</td>\n",
       "      <td>0.103533</td>\n",
       "      <td>0.063487</td>\n",
       "      <td>0.004045</td>\n",
       "      <td>0.619888</td>\n",
       "      <td>-0.999755</td>\n",
       "      <td>0.212361</td>\n",
       "      <td>...</td>\n",
       "      <td>0.040548</td>\n",
       "      <td>0.010049</td>\n",
       "      <td>0.010183</td>\n",
       "      <td>0.008579</td>\n",
       "      <td>0.004619</td>\n",
       "      <td>-0.000438</td>\n",
       "      <td>-0.003028</td>\n",
       "      <td>0.034092</td>\n",
       "      <td>-0.015271</td>\n",
       "      <td>-0.049949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_WORK_PHONE</th>\n",
       "      <td>0.028524</td>\n",
       "      <td>0.055630</td>\n",
       "      <td>-0.017193</td>\n",
       "      <td>-0.021085</td>\n",
       "      <td>-0.024803</td>\n",
       "      <td>0.001086</td>\n",
       "      <td>-0.015628</td>\n",
       "      <td>0.172457</td>\n",
       "      <td>-0.233972</td>\n",
       "      <td>0.058283</td>\n",
       "      <td>...</td>\n",
       "      <td>0.032049</td>\n",
       "      <td>0.011854</td>\n",
       "      <td>0.001771</td>\n",
       "      <td>0.001541</td>\n",
       "      <td>-0.005358</td>\n",
       "      <td>-0.004434</td>\n",
       "      <td>-0.004404</td>\n",
       "      <td>-0.001829</td>\n",
       "      <td>-0.022964</td>\n",
       "      <td>-0.075875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_CONT_MOBILE</th>\n",
       "      <td>0.000370</td>\n",
       "      <td>-0.000794</td>\n",
       "      <td>-0.008290</td>\n",
       "      <td>0.023653</td>\n",
       "      <td>0.022350</td>\n",
       "      <td>0.020706</td>\n",
       "      <td>-0.012478</td>\n",
       "      <td>-0.014985</td>\n",
       "      <td>0.012745</td>\n",
       "      <td>-0.003848</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.043068</td>\n",
       "      <td>-0.005123</td>\n",
       "      <td>0.000974</td>\n",
       "      <td>-0.015677</td>\n",
       "      <td>-0.004600</td>\n",
       "      <td>-0.002481</td>\n",
       "      <td>-0.008496</td>\n",
       "      <td>0.005922</td>\n",
       "      <td>0.006934</td>\n",
       "      <td>0.026700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_PHONE</th>\n",
       "      <td>-0.023806</td>\n",
       "      <td>-0.029906</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.026213</td>\n",
       "      <td>0.010802</td>\n",
       "      <td>0.042179</td>\n",
       "      <td>0.090939</td>\n",
       "      <td>-0.042402</td>\n",
       "      <td>0.015291</td>\n",
       "      <td>-0.075188</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004055</td>\n",
       "      <td>0.009660</td>\n",
       "      <td>0.000692</td>\n",
       "      <td>0.000020</td>\n",
       "      <td>-0.003251</td>\n",
       "      <td>-0.000833</td>\n",
       "      <td>-0.000201</td>\n",
       "      <td>0.031992</td>\n",
       "      <td>-0.009969</td>\n",
       "      <td>-0.031587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_EMAIL</th>\n",
       "      <td>-0.001758</td>\n",
       "      <td>0.022619</td>\n",
       "      <td>0.038378</td>\n",
       "      <td>0.016632</td>\n",
       "      <td>0.071709</td>\n",
       "      <td>0.017048</td>\n",
       "      <td>0.040012</td>\n",
       "      <td>0.088208</td>\n",
       "      <td>-0.062112</td>\n",
       "      <td>0.034388</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008110</td>\n",
       "      <td>-0.002525</td>\n",
       "      <td>-0.001778</td>\n",
       "      <td>-0.000647</td>\n",
       "      <td>0.003390</td>\n",
       "      <td>0.003849</td>\n",
       "      <td>0.021581</td>\n",
       "      <td>0.025669</td>\n",
       "      <td>0.013426</td>\n",
       "      <td>0.053354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CNT_FAM_MEMBERS</th>\n",
       "      <td>0.009308</td>\n",
       "      <td>0.879161</td>\n",
       "      <td>0.016342</td>\n",
       "      <td>0.063160</td>\n",
       "      <td>0.075539</td>\n",
       "      <td>0.061185</td>\n",
       "      <td>-0.024209</td>\n",
       "      <td>0.278894</td>\n",
       "      <td>-0.233549</td>\n",
       "      <td>0.173416</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001485</td>\n",
       "      <td>0.002205</td>\n",
       "      <td>0.000188</td>\n",
       "      <td>-0.005801</td>\n",
       "      <td>0.000660</td>\n",
       "      <td>-0.001215</td>\n",
       "      <td>-0.001174</td>\n",
       "      <td>-0.008021</td>\n",
       "      <td>-0.004739</td>\n",
       "      <td>-0.028571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REGION_RATING_CLIENT</th>\n",
       "      <td>0.058899</td>\n",
       "      <td>0.025423</td>\n",
       "      <td>-0.085465</td>\n",
       "      <td>-0.101776</td>\n",
       "      <td>-0.128525</td>\n",
       "      <td>-0.103786</td>\n",
       "      <td>-0.532877</td>\n",
       "      <td>0.009361</td>\n",
       "      <td>0.032750</td>\n",
       "      <td>0.080210</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.012532</td>\n",
       "      <td>-0.001205</td>\n",
       "      <td>0.002217</td>\n",
       "      <td>-0.001887</td>\n",
       "      <td>0.006312</td>\n",
       "      <td>-0.002241</td>\n",
       "      <td>0.001683</td>\n",
       "      <td>-0.069712</td>\n",
       "      <td>0.005436</td>\n",
       "      <td>0.011494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REGION_RATING_CLIENT_W_CITY</th>\n",
       "      <td>0.060893</td>\n",
       "      <td>0.024781</td>\n",
       "      <td>-0.091735</td>\n",
       "      <td>-0.110915</td>\n",
       "      <td>-0.141682</td>\n",
       "      <td>-0.112208</td>\n",
       "      <td>-0.531535</td>\n",
       "      <td>0.008073</td>\n",
       "      <td>0.034624</td>\n",
       "      <td>0.074038</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013672</td>\n",
       "      <td>-0.001530</td>\n",
       "      <td>0.002609</td>\n",
       "      <td>-0.001501</td>\n",
       "      <td>0.006239</td>\n",
       "      <td>-0.001953</td>\n",
       "      <td>0.001102</td>\n",
       "      <td>-0.067741</td>\n",
       "      <td>0.004773</td>\n",
       "      <td>0.010683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HOUR_APPR_PROCESS_START</th>\n",
       "      <td>-0.024166</td>\n",
       "      <td>-0.007292</td>\n",
       "      <td>0.036459</td>\n",
       "      <td>0.052738</td>\n",
       "      <td>0.052269</td>\n",
       "      <td>0.062320</td>\n",
       "      <td>0.171285</td>\n",
       "      <td>0.091064</td>\n",
       "      <td>-0.091138</td>\n",
       "      <td>-0.010908</td>\n",
       "      <td>...</td>\n",
       "      <td>0.021584</td>\n",
       "      <td>0.002507</td>\n",
       "      <td>0.003277</td>\n",
       "      <td>0.003998</td>\n",
       "      <td>-0.016005</td>\n",
       "      <td>0.002274</td>\n",
       "      <td>-0.002985</td>\n",
       "      <td>0.037673</td>\n",
       "      <td>-0.000680</td>\n",
       "      <td>-0.030943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REG_REGION_NOT_LIVE_REGION</th>\n",
       "      <td>0.005576</td>\n",
       "      <td>-0.013319</td>\n",
       "      <td>0.031191</td>\n",
       "      <td>0.024010</td>\n",
       "      <td>0.041299</td>\n",
       "      <td>0.026111</td>\n",
       "      <td>0.002118</td>\n",
       "      <td>0.065486</td>\n",
       "      <td>-0.035803</td>\n",
       "      <td>0.028213</td>\n",
       "      <td>...</td>\n",
       "      <td>0.008344</td>\n",
       "      <td>-0.001934</td>\n",
       "      <td>-0.002794</td>\n",
       "      <td>0.005006</td>\n",
       "      <td>-0.002044</td>\n",
       "      <td>-0.001342</td>\n",
       "      <td>0.001227</td>\n",
       "      <td>0.000316</td>\n",
       "      <td>-0.001813</td>\n",
       "      <td>-0.017095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REG_REGION_NOT_WORK_REGION</th>\n",
       "      <td>0.006942</td>\n",
       "      <td>0.008185</td>\n",
       "      <td>0.062340</td>\n",
       "      <td>0.051929</td>\n",
       "      <td>0.079420</td>\n",
       "      <td>0.053171</td>\n",
       "      <td>0.056944</td>\n",
       "      <td>0.095819</td>\n",
       "      <td>-0.107150</td>\n",
       "      <td>0.036787</td>\n",
       "      <td>...</td>\n",
       "      <td>0.007436</td>\n",
       "      <td>0.001038</td>\n",
       "      <td>-0.001263</td>\n",
       "      <td>-0.000995</td>\n",
       "      <td>-0.001749</td>\n",
       "      <td>-0.001775</td>\n",
       "      <td>-0.000705</td>\n",
       "      <td>0.008360</td>\n",
       "      <td>-0.004959</td>\n",
       "      <td>-0.021587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LIVE_REGION_NOT_WORK_REGION</th>\n",
       "      <td>0.002819</td>\n",
       "      <td>0.014835</td>\n",
       "      <td>0.058059</td>\n",
       "      <td>0.052609</td>\n",
       "      <td>0.074550</td>\n",
       "      <td>0.052864</td>\n",
       "      <td>0.081016</td>\n",
       "      <td>0.069567</td>\n",
       "      <td>-0.095539</td>\n",
       "      <td>0.027560</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004282</td>\n",
       "      <td>0.003078</td>\n",
       "      <td>-0.000251</td>\n",
       "      <td>-0.001969</td>\n",
       "      <td>-0.000996</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>-0.001486</td>\n",
       "      <td>0.010246</td>\n",
       "      <td>-0.005655</td>\n",
       "      <td>-0.017429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REG_CITY_NOT_LIVE_CITY</th>\n",
       "      <td>0.044395</td>\n",
       "      <td>0.020072</td>\n",
       "      <td>0.003574</td>\n",
       "      <td>-0.026886</td>\n",
       "      <td>-0.006214</td>\n",
       "      <td>-0.027212</td>\n",
       "      <td>-0.050499</td>\n",
       "      <td>0.180382</td>\n",
       "      <td>-0.090516</td>\n",
       "      <td>0.064334</td>\n",
       "      <td>...</td>\n",
       "      <td>0.013432</td>\n",
       "      <td>-0.005119</td>\n",
       "      <td>-0.001181</td>\n",
       "      <td>0.002614</td>\n",
       "      <td>0.000549</td>\n",
       "      <td>-0.002152</td>\n",
       "      <td>-0.001517</td>\n",
       "      <td>-0.010881</td>\n",
       "      <td>0.000933</td>\n",
       "      <td>-0.004793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REG_CITY_NOT_WORK_CITY</th>\n",
       "      <td>0.050994</td>\n",
       "      <td>0.070650</td>\n",
       "      <td>0.006431</td>\n",
       "      <td>-0.018856</td>\n",
       "      <td>0.000896</td>\n",
       "      <td>-0.020333</td>\n",
       "      <td>-0.044057</td>\n",
       "      <td>0.242401</td>\n",
       "      <td>-0.254559</td>\n",
       "      <td>0.099874</td>\n",
       "      <td>...</td>\n",
       "      <td>0.013919</td>\n",
       "      <td>-0.003854</td>\n",
       "      <td>0.000703</td>\n",
       "      <td>0.003487</td>\n",
       "      <td>0.000481</td>\n",
       "      <td>-0.001982</td>\n",
       "      <td>-0.002753</td>\n",
       "      <td>-0.012182</td>\n",
       "      <td>-0.005227</td>\n",
       "      <td>-0.008013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LIVE_CITY_NOT_WORK_CITY</th>\n",
       "      <td>0.032518</td>\n",
       "      <td>0.069957</td>\n",
       "      <td>0.008285</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.010084</td>\n",
       "      <td>-0.001309</td>\n",
       "      <td>-0.015188</td>\n",
       "      <td>0.158882</td>\n",
       "      <td>-0.218101</td>\n",
       "      <td>0.072658</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006332</td>\n",
       "      <td>-0.002035</td>\n",
       "      <td>0.001877</td>\n",
       "      <td>0.004401</td>\n",
       "      <td>-0.000924</td>\n",
       "      <td>-0.001960</td>\n",
       "      <td>-0.003325</td>\n",
       "      <td>-0.007592</td>\n",
       "      <td>-0.006792</td>\n",
       "      <td>-0.008415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EXT_SOURCE_1</th>\n",
       "      <td>-0.155317</td>\n",
       "      <td>-0.138470</td>\n",
       "      <td>0.026232</td>\n",
       "      <td>0.168429</td>\n",
       "      <td>0.119398</td>\n",
       "      <td>0.175502</td>\n",
       "      <td>0.099997</td>\n",
       "      <td>-0.600610</td>\n",
       "      <td>0.289848</td>\n",
       "      <td>-0.181095</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.025739</td>\n",
       "      <td>0.005131</td>\n",
       "      <td>-0.005102</td>\n",
       "      <td>-0.019208</td>\n",
       "      <td>-0.003963</td>\n",
       "      <td>-0.005087</td>\n",
       "      <td>-0.001801</td>\n",
       "      <td>0.030820</td>\n",
       "      <td>-0.003631</td>\n",
       "      <td>0.006562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EXT_SOURCE_2</th>\n",
       "      <td>-0.160472</td>\n",
       "      <td>-0.018015</td>\n",
       "      <td>0.060925</td>\n",
       "      <td>0.131228</td>\n",
       "      <td>0.125804</td>\n",
       "      <td>0.139367</td>\n",
       "      <td>0.198924</td>\n",
       "      <td>-0.091996</td>\n",
       "      <td>-0.020767</td>\n",
       "      <td>-0.059913</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001874</td>\n",
       "      <td>0.003256</td>\n",
       "      <td>0.000614</td>\n",
       "      <td>-0.007236</td>\n",
       "      <td>-0.004077</td>\n",
       "      <td>0.000553</td>\n",
       "      <td>0.001507</td>\n",
       "      <td>0.051981</td>\n",
       "      <td>-0.002849</td>\n",
       "      <td>-0.021984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>\n",
       "      <td>0.032248</td>\n",
       "      <td>-0.001262</td>\n",
       "      <td>-0.013244</td>\n",
       "      <td>-0.021229</td>\n",
       "      <td>-0.022833</td>\n",
       "      <td>-0.022244</td>\n",
       "      <td>0.006329</td>\n",
       "      <td>0.000206</td>\n",
       "      <td>0.016717</td>\n",
       "      <td>0.003361</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001019</td>\n",
       "      <td>-0.003363</td>\n",
       "      <td>0.000203</td>\n",
       "      <td>-0.000652</td>\n",
       "      <td>-0.000177</td>\n",
       "      <td>-0.001272</td>\n",
       "      <td>-0.002167</td>\n",
       "      <td>0.000331</td>\n",
       "      <td>-0.001302</td>\n",
       "      <td>0.018590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>\n",
       "      <td>0.009022</td>\n",
       "      <td>0.015232</td>\n",
       "      <td>-0.013015</td>\n",
       "      <td>0.000239</td>\n",
       "      <td>-0.011731</td>\n",
       "      <td>0.000347</td>\n",
       "      <td>-0.010638</td>\n",
       "      <td>0.007023</td>\n",
       "      <td>0.005888</td>\n",
       "      <td>0.009088</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003258</td>\n",
       "      <td>0.001001</td>\n",
       "      <td>0.000351</td>\n",
       "      <td>-0.000552</td>\n",
       "      <td>0.000413</td>\n",
       "      <td>-0.002542</td>\n",
       "      <td>0.000197</td>\n",
       "      <td>0.001639</td>\n",
       "      <td>0.003932</td>\n",
       "      <td>0.032957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DEF_60_CNT_SOCIAL_CIRCLE</th>\n",
       "      <td>0.031276</td>\n",
       "      <td>-0.001861</td>\n",
       "      <td>-0.013135</td>\n",
       "      <td>-0.023767</td>\n",
       "      <td>-0.024001</td>\n",
       "      <td>-0.024506</td>\n",
       "      <td>0.002404</td>\n",
       "      <td>0.001925</td>\n",
       "      <td>0.014211</td>\n",
       "      <td>0.004538</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003316</td>\n",
       "      <td>-0.003063</td>\n",
       "      <td>0.000157</td>\n",
       "      <td>0.000393</td>\n",
       "      <td>-0.001461</td>\n",
       "      <td>-0.001822</td>\n",
       "      <td>-0.002536</td>\n",
       "      <td>-0.001462</td>\n",
       "      <td>-0.000291</td>\n",
       "      <td>0.017190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DAYS_LAST_PHONE_CHANGE</th>\n",
       "      <td>0.055218</td>\n",
       "      <td>-0.005865</td>\n",
       "      <td>-0.018585</td>\n",
       "      <td>-0.073701</td>\n",
       "      <td>-0.063747</td>\n",
       "      <td>-0.076313</td>\n",
       "      <td>-0.044013</td>\n",
       "      <td>0.082939</td>\n",
       "      <td>0.023032</td>\n",
       "      <td>0.056983</td>\n",
       "      <td>...</td>\n",
       "      <td>0.047604</td>\n",
       "      <td>0.006852</td>\n",
       "      <td>0.009171</td>\n",
       "      <td>0.009826</td>\n",
       "      <td>-0.000858</td>\n",
       "      <td>0.002337</td>\n",
       "      <td>-0.003495</td>\n",
       "      <td>-0.041244</td>\n",
       "      <td>-0.001451</td>\n",
       "      <td>-0.112725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_2</th>\n",
       "      <td>0.005417</td>\n",
       "      <td>0.001786</td>\n",
       "      <td>-0.001000</td>\n",
       "      <td>0.008905</td>\n",
       "      <td>0.003397</td>\n",
       "      <td>0.010774</td>\n",
       "      <td>-0.003040</td>\n",
       "      <td>-0.001191</td>\n",
       "      <td>-0.003090</td>\n",
       "      <td>-0.004466</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000589</td>\n",
       "      <td>-0.000159</td>\n",
       "      <td>-0.000146</td>\n",
       "      <td>-0.000119</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_3</th>\n",
       "      <td>0.044346</td>\n",
       "      <td>0.056837</td>\n",
       "      <td>-0.016751</td>\n",
       "      <td>0.096365</td>\n",
       "      <td>0.102843</td>\n",
       "      <td>0.074900</td>\n",
       "      <td>-0.084644</td>\n",
       "      <td>0.109666</td>\n",
       "      <td>-0.249082</td>\n",
       "      <td>0.033740</td>\n",
       "      <td>...</td>\n",
       "      <td>0.007976</td>\n",
       "      <td>0.009423</td>\n",
       "      <td>0.007396</td>\n",
       "      <td>-0.025510</td>\n",
       "      <td>-0.000761</td>\n",
       "      <td>0.000982</td>\n",
       "      <td>0.008175</td>\n",
       "      <td>0.010360</td>\n",
       "      <td>0.009576</td>\n",
       "      <td>0.048214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_4</th>\n",
       "      <td>-0.002672</td>\n",
       "      <td>-0.003709</td>\n",
       "      <td>0.000529</td>\n",
       "      <td>0.000630</td>\n",
       "      <td>0.001109</td>\n",
       "      <td>0.001113</td>\n",
       "      <td>0.008102</td>\n",
       "      <td>-0.002789</td>\n",
       "      <td>0.000437</td>\n",
       "      <td>-0.004221</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000816</td>\n",
       "      <td>-0.000220</td>\n",
       "      <td>-0.000203</td>\n",
       "      <td>-0.000165</td>\n",
       "      <td>-0.000725</td>\n",
       "      <td>-0.000600</td>\n",
       "      <td>-0.001595</td>\n",
       "      <td>0.005005</td>\n",
       "      <td>0.000313</td>\n",
       "      <td>0.000297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_5</th>\n",
       "      <td>-0.000316</td>\n",
       "      <td>-0.016737</td>\n",
       "      <td>0.001507</td>\n",
       "      <td>-0.011756</td>\n",
       "      <td>-0.006655</td>\n",
       "      <td>-0.005201</td>\n",
       "      <td>0.016032</td>\n",
       "      <td>0.016774</td>\n",
       "      <td>-0.020041</td>\n",
       "      <td>-0.001243</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010622</td>\n",
       "      <td>-0.003023</td>\n",
       "      <td>-0.002791</td>\n",
       "      <td>0.000645</td>\n",
       "      <td>-0.001020</td>\n",
       "      <td>-0.000607</td>\n",
       "      <td>0.001904</td>\n",
       "      <td>0.006739</td>\n",
       "      <td>-0.004568</td>\n",
       "      <td>-0.010234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_6</th>\n",
       "      <td>-0.028602</td>\n",
       "      <td>-0.157024</td>\n",
       "      <td>-0.045878</td>\n",
       "      <td>-0.046717</td>\n",
       "      <td>-0.073897</td>\n",
       "      <td>-0.050232</td>\n",
       "      <td>0.000728</td>\n",
       "      <td>-0.407160</td>\n",
       "      <td>0.597484</td>\n",
       "      <td>-0.137769</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.023915</td>\n",
       "      <td>-0.004759</td>\n",
       "      <td>-0.005981</td>\n",
       "      <td>-0.005688</td>\n",
       "      <td>-0.001567</td>\n",
       "      <td>0.003607</td>\n",
       "      <td>0.002819</td>\n",
       "      <td>-0.023518</td>\n",
       "      <td>0.010201</td>\n",
       "      <td>0.012223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_7</th>\n",
       "      <td>-0.001520</td>\n",
       "      <td>-0.001498</td>\n",
       "      <td>0.003825</td>\n",
       "      <td>-0.004040</td>\n",
       "      <td>-0.002273</td>\n",
       "      <td>0.000202</td>\n",
       "      <td>0.002436</td>\n",
       "      <td>0.001469</td>\n",
       "      <td>-0.002221</td>\n",
       "      <td>0.001366</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001254</td>\n",
       "      <td>-0.000338</td>\n",
       "      <td>-0.000312</td>\n",
       "      <td>-0.000254</td>\n",
       "      <td>-0.001036</td>\n",
       "      <td>-0.000858</td>\n",
       "      <td>-0.000925</td>\n",
       "      <td>-0.003055</td>\n",
       "      <td>-0.000352</td>\n",
       "      <td>0.003542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_8</th>\n",
       "      <td>-0.008040</td>\n",
       "      <td>0.051697</td>\n",
       "      <td>0.072451</td>\n",
       "      <td>0.082819</td>\n",
       "      <td>0.130584</td>\n",
       "      <td>0.080482</td>\n",
       "      <td>0.088523</td>\n",
       "      <td>0.113243</td>\n",
       "      <td>-0.121571</td>\n",
       "      <td>0.057041</td>\n",
       "      <td>...</td>\n",
       "      <td>0.007756</td>\n",
       "      <td>0.000053</td>\n",
       "      <td>0.003859</td>\n",
       "      <td>-0.001548</td>\n",
       "      <td>0.004995</td>\n",
       "      <td>0.000932</td>\n",
       "      <td>0.000641</td>\n",
       "      <td>0.019248</td>\n",
       "      <td>-0.003269</td>\n",
       "      <td>-0.024333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_9</th>\n",
       "      <td>-0.004352</td>\n",
       "      <td>-0.001997</td>\n",
       "      <td>0.018389</td>\n",
       "      <td>0.022602</td>\n",
       "      <td>0.033691</td>\n",
       "      <td>0.022574</td>\n",
       "      <td>0.038434</td>\n",
       "      <td>0.018213</td>\n",
       "      <td>-0.023834</td>\n",
       "      <td>0.009898</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001895</td>\n",
       "      <td>-0.001526</td>\n",
       "      <td>-0.001409</td>\n",
       "      <td>-0.001145</td>\n",
       "      <td>-0.002482</td>\n",
       "      <td>0.000012</td>\n",
       "      <td>0.000223</td>\n",
       "      <td>0.005266</td>\n",
       "      <td>-0.003152</td>\n",
       "      <td>-0.010376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_10</th>\n",
       "      <td>-0.001414</td>\n",
       "      <td>-0.002756</td>\n",
       "      <td>0.000290</td>\n",
       "      <td>-0.003100</td>\n",
       "      <td>-0.003369</td>\n",
       "      <td>-0.002134</td>\n",
       "      <td>0.001992</td>\n",
       "      <td>-0.000168</td>\n",
       "      <td>-0.000439</td>\n",
       "      <td>0.000292</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000432</td>\n",
       "      <td>-0.000116</td>\n",
       "      <td>-0.000107</td>\n",
       "      <td>-0.000087</td>\n",
       "      <td>-0.000392</td>\n",
       "      <td>-0.000324</td>\n",
       "      <td>-0.000861</td>\n",
       "      <td>0.000903</td>\n",
       "      <td>0.002900</td>\n",
       "      <td>0.002627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_11</th>\n",
       "      <td>-0.004229</td>\n",
       "      <td>-0.005318</td>\n",
       "      <td>0.002315</td>\n",
       "      <td>0.028986</td>\n",
       "      <td>-0.003668</td>\n",
       "      <td>0.035124</td>\n",
       "      <td>0.024632</td>\n",
       "      <td>0.044716</td>\n",
       "      <td>-0.028915</td>\n",
       "      <td>0.014731</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005674</td>\n",
       "      <td>-0.001529</td>\n",
       "      <td>-0.001412</td>\n",
       "      <td>-0.001147</td>\n",
       "      <td>-0.002918</td>\n",
       "      <td>0.003891</td>\n",
       "      <td>-0.000336</td>\n",
       "      <td>-0.002026</td>\n",
       "      <td>-0.007402</td>\n",
       "      <td>-0.032884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_12</th>\n",
       "      <td>-0.000756</td>\n",
       "      <td>0.000293</td>\n",
       "      <td>0.002540</td>\n",
       "      <td>0.003857</td>\n",
       "      <td>0.000847</td>\n",
       "      <td>0.004067</td>\n",
       "      <td>-0.000404</td>\n",
       "      <td>0.000236</td>\n",
       "      <td>-0.001225</td>\n",
       "      <td>0.001682</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000231</td>\n",
       "      <td>-0.000062</td>\n",
       "      <td>-0.000057</td>\n",
       "      <td>-0.000047</td>\n",
       "      <td>0.016142</td>\n",
       "      <td>0.012206</td>\n",
       "      <td>-0.000460</td>\n",
       "      <td>0.002193</td>\n",
       "      <td>-0.000917</td>\n",
       "      <td>-0.002054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_13</th>\n",
       "      <td>-0.011583</td>\n",
       "      <td>0.003945</td>\n",
       "      <td>0.022747</td>\n",
       "      <td>0.052429</td>\n",
       "      <td>0.025115</td>\n",
       "      <td>0.052358</td>\n",
       "      <td>0.031186</td>\n",
       "      <td>0.026333</td>\n",
       "      <td>-0.025778</td>\n",
       "      <td>0.015470</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005385</td>\n",
       "      <td>-0.001451</td>\n",
       "      <td>0.042520</td>\n",
       "      <td>0.004908</td>\n",
       "      <td>-0.001862</td>\n",
       "      <td>0.007012</td>\n",
       "      <td>-0.003936</td>\n",
       "      <td>0.011011</td>\n",
       "      <td>-0.004401</td>\n",
       "      <td>-0.033801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_14</th>\n",
       "      <td>-0.009464</td>\n",
       "      <td>-0.005459</td>\n",
       "      <td>0.020708</td>\n",
       "      <td>0.048828</td>\n",
       "      <td>0.036856</td>\n",
       "      <td>0.048749</td>\n",
       "      <td>0.032202</td>\n",
       "      <td>0.030733</td>\n",
       "      <td>-0.023383</td>\n",
       "      <td>0.011636</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.004913</td>\n",
       "      <td>-0.001324</td>\n",
       "      <td>0.030805</td>\n",
       "      <td>0.002291</td>\n",
       "      <td>0.001168</td>\n",
       "      <td>0.013119</td>\n",
       "      <td>-0.000847</td>\n",
       "      <td>0.004658</td>\n",
       "      <td>-0.004402</td>\n",
       "      <td>-0.033008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_15</th>\n",
       "      <td>-0.006536</td>\n",
       "      <td>0.003609</td>\n",
       "      <td>0.010793</td>\n",
       "      <td>0.032252</td>\n",
       "      <td>0.016125</td>\n",
       "      <td>0.032932</td>\n",
       "      <td>0.009446</td>\n",
       "      <td>0.012953</td>\n",
       "      <td>-0.014285</td>\n",
       "      <td>0.008195</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003151</td>\n",
       "      <td>-0.000849</td>\n",
       "      <td>0.028299</td>\n",
       "      <td>-0.000637</td>\n",
       "      <td>-0.000328</td>\n",
       "      <td>0.003279</td>\n",
       "      <td>0.001429</td>\n",
       "      <td>0.002403</td>\n",
       "      <td>-0.001556</td>\n",
       "      <td>-0.018955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_16</th>\n",
       "      <td>-0.011615</td>\n",
       "      <td>0.010662</td>\n",
       "      <td>0.007269</td>\n",
       "      <td>0.061925</td>\n",
       "      <td>0.007198</td>\n",
       "      <td>0.058305</td>\n",
       "      <td>0.006313</td>\n",
       "      <td>0.024044</td>\n",
       "      <td>-0.042905</td>\n",
       "      <td>0.025935</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009066</td>\n",
       "      <td>-0.002444</td>\n",
       "      <td>0.082229</td>\n",
       "      <td>0.003544</td>\n",
       "      <td>-0.002259</td>\n",
       "      <td>0.006318</td>\n",
       "      <td>-0.009751</td>\n",
       "      <td>0.002032</td>\n",
       "      <td>0.000706</td>\n",
       "      <td>-0.048754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_17</th>\n",
       "      <td>-0.003378</td>\n",
       "      <td>0.000773</td>\n",
       "      <td>0.002230</td>\n",
       "      <td>0.011743</td>\n",
       "      <td>0.003191</td>\n",
       "      <td>0.012139</td>\n",
       "      <td>0.007414</td>\n",
       "      <td>0.007877</td>\n",
       "      <td>-0.007187</td>\n",
       "      <td>0.002102</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001479</td>\n",
       "      <td>-0.000399</td>\n",
       "      <td>0.026167</td>\n",
       "      <td>-0.000299</td>\n",
       "      <td>-0.001282</td>\n",
       "      <td>-0.001061</td>\n",
       "      <td>-0.002819</td>\n",
       "      <td>0.000231</td>\n",
       "      <td>-0.001385</td>\n",
       "      <td>-0.009763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_18</th>\n",
       "      <td>-0.007952</td>\n",
       "      <td>0.004031</td>\n",
       "      <td>0.003130</td>\n",
       "      <td>0.034329</td>\n",
       "      <td>-0.009745</td>\n",
       "      <td>0.032748</td>\n",
       "      <td>0.013367</td>\n",
       "      <td>0.044498</td>\n",
       "      <td>-0.040396</td>\n",
       "      <td>0.017040</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.002209</td>\n",
       "      <td>0.081589</td>\n",
       "      <td>0.006259</td>\n",
       "      <td>-0.002231</td>\n",
       "      <td>0.013281</td>\n",
       "      <td>-0.004640</td>\n",
       "      <td>-0.001565</td>\n",
       "      <td>-0.005125</td>\n",
       "      <td>-0.047432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_19</th>\n",
       "      <td>-0.001358</td>\n",
       "      <td>0.000864</td>\n",
       "      <td>0.002408</td>\n",
       "      <td>0.021082</td>\n",
       "      <td>0.004573</td>\n",
       "      <td>0.020279</td>\n",
       "      <td>0.002364</td>\n",
       "      <td>0.003614</td>\n",
       "      <td>-0.010040</td>\n",
       "      <td>0.004764</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.002209</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.034981</td>\n",
       "      <td>-0.000447</td>\n",
       "      <td>0.003456</td>\n",
       "      <td>0.001126</td>\n",
       "      <td>-0.001275</td>\n",
       "      <td>-0.002729</td>\n",
       "      <td>-0.001575</td>\n",
       "      <td>-0.007009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_20</th>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.000988</td>\n",
       "      <td>0.000242</td>\n",
       "      <td>0.031023</td>\n",
       "      <td>0.011718</td>\n",
       "      <td>0.031640</td>\n",
       "      <td>-0.000045</td>\n",
       "      <td>0.009015</td>\n",
       "      <td>-0.010135</td>\n",
       "      <td>0.006971</td>\n",
       "      <td>...</td>\n",
       "      <td>0.081589</td>\n",
       "      <td>0.034981</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.007480</td>\n",
       "      <td>-0.001844</td>\n",
       "      <td>-0.000120</td>\n",
       "      <td>-0.001770</td>\n",
       "      <td>0.001285</td>\n",
       "      <td>-0.001010</td>\n",
       "      <td>-0.012126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FLAG_DOCUMENT_21</th>\n",
       "      <td>0.003709</td>\n",
       "      <td>-0.002450</td>\n",
       "      <td>-0.000589</td>\n",
       "      <td>-0.016148</td>\n",
       "      <td>-0.017598</td>\n",
       "      <td>-0.014486</td>\n",
       "      <td>0.003437</td>\n",
       "      <td>0.027282</td>\n",
       "      <td>-0.008396</td>\n",
       "      <td>0.003859</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006259</td>\n",
       "      <td>-0.000447</td>\n",
       "      <td>0.007480</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.001365</td>\n",
       "      <td>-0.001130</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>-0.003612</td>\n",
       "      <td>-0.002004</td>\n",
       "      <td>-0.005457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>\n",
       "      <td>0.000930</td>\n",
       "      <td>-0.000410</td>\n",
       "      <td>0.000709</td>\n",
       "      <td>-0.003906</td>\n",
       "      <td>0.003861</td>\n",
       "      <td>-0.003237</td>\n",
       "      <td>-0.002225</td>\n",
       "      <td>0.005285</td>\n",
       "      <td>-0.004735</td>\n",
       "      <td>-0.002855</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.002231</td>\n",
       "      <td>0.003456</td>\n",
       "      <td>-0.001844</td>\n",
       "      <td>-0.001365</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.230374</td>\n",
       "      <td>0.004706</td>\n",
       "      <td>-0.000018</td>\n",
       "      <td>-0.002716</td>\n",
       "      <td>-0.004597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>\n",
       "      <td>0.002704</td>\n",
       "      <td>-0.000366</td>\n",
       "      <td>0.002944</td>\n",
       "      <td>0.004238</td>\n",
       "      <td>0.002185</td>\n",
       "      <td>0.004677</td>\n",
       "      <td>0.001399</td>\n",
       "      <td>0.002255</td>\n",
       "      <td>0.000472</td>\n",
       "      <td>-0.000508</td>\n",
       "      <td>...</td>\n",
       "      <td>0.013281</td>\n",
       "      <td>0.001126</td>\n",
       "      <td>-0.000120</td>\n",
       "      <td>-0.001130</td>\n",
       "      <td>0.230374</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.217412</td>\n",
       "      <td>-0.005258</td>\n",
       "      <td>-0.004416</td>\n",
       "      <td>-0.003355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>\n",
       "      <td>0.000788</td>\n",
       "      <td>-0.002436</td>\n",
       "      <td>0.002387</td>\n",
       "      <td>-0.001275</td>\n",
       "      <td>0.013881</td>\n",
       "      <td>-0.001007</td>\n",
       "      <td>-0.002149</td>\n",
       "      <td>-0.001336</td>\n",
       "      <td>0.003072</td>\n",
       "      <td>-0.001069</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.004640</td>\n",
       "      <td>-0.001275</td>\n",
       "      <td>-0.001770</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.004706</td>\n",
       "      <td>0.217412</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.014096</td>\n",
       "      <td>-0.015115</td>\n",
       "      <td>0.018917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_MON</th>\n",
       "      <td>-0.012462</td>\n",
       "      <td>-0.010808</td>\n",
       "      <td>0.024700</td>\n",
       "      <td>0.054451</td>\n",
       "      <td>0.039148</td>\n",
       "      <td>0.056422</td>\n",
       "      <td>0.078607</td>\n",
       "      <td>0.001372</td>\n",
       "      <td>-0.034457</td>\n",
       "      <td>-0.011353</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001565</td>\n",
       "      <td>-0.002729</td>\n",
       "      <td>0.001285</td>\n",
       "      <td>-0.003612</td>\n",
       "      <td>-0.000018</td>\n",
       "      <td>-0.005258</td>\n",
       "      <td>-0.014096</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.007789</td>\n",
       "      <td>-0.004975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>\n",
       "      <td>-0.002022</td>\n",
       "      <td>-0.007836</td>\n",
       "      <td>0.004859</td>\n",
       "      <td>0.015925</td>\n",
       "      <td>0.010124</td>\n",
       "      <td>0.016432</td>\n",
       "      <td>-0.001279</td>\n",
       "      <td>-0.011799</td>\n",
       "      <td>0.015345</td>\n",
       "      <td>-0.001308</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005125</td>\n",
       "      <td>-0.001575</td>\n",
       "      <td>-0.001010</td>\n",
       "      <td>-0.002004</td>\n",
       "      <td>-0.002716</td>\n",
       "      <td>-0.004416</td>\n",
       "      <td>-0.015115</td>\n",
       "      <td>-0.007789</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.076208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>\n",
       "      <td>0.019930</td>\n",
       "      <td>-0.041550</td>\n",
       "      <td>0.011690</td>\n",
       "      <td>-0.048448</td>\n",
       "      <td>-0.011320</td>\n",
       "      <td>-0.050998</td>\n",
       "      <td>0.001003</td>\n",
       "      <td>-0.071983</td>\n",
       "      <td>0.049988</td>\n",
       "      <td>-0.024805</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.047432</td>\n",
       "      <td>-0.007009</td>\n",
       "      <td>-0.012126</td>\n",
       "      <td>-0.005457</td>\n",
       "      <td>-0.004597</td>\n",
       "      <td>-0.003355</td>\n",
       "      <td>0.018917</td>\n",
       "      <td>-0.004975</td>\n",
       "      <td>0.076208</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>105 rows × 105 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               TARGET  CNT_CHILDREN  AMT_INCOME_TOTAL  \\\n",
       "TARGET                       1.000000      0.019187         -0.003982   \n",
       "CNT_CHILDREN                 0.019187      1.000000          0.012882   \n",
       "AMT_INCOME_TOTAL            -0.003982      0.012882          1.000000   \n",
       "AMT_CREDIT                  -0.030369      0.002145          0.156870   \n",
       "AMT_ANNUITY                 -0.012817      0.021374          0.191657   \n",
       "AMT_GOODS_PRICE             -0.039645     -0.001827          0.159610   \n",
       "REGION_POPULATION_RELATIVE  -0.037227     -0.025573          0.074796   \n",
       "DAYS_BIRTH                   0.078239      0.330938          0.027261   \n",
       "DAYS_EMPLOYED               -0.044932     -0.239818         -0.064223   \n",
       "DAYS_REGISTRATION            0.041975      0.183395          0.027805   \n",
       "DAYS_ID_PUBLISH              0.051457     -0.028019          0.008506   \n",
       "OWN_CAR_AGE                  0.037612      0.008494         -0.117273   \n",
       "FLAG_MOBIL                   0.000534      0.001041          0.000325   \n",
       "FLAG_EMP_PHONE               0.045982      0.240714          0.063994   \n",
       "FLAG_WORK_PHONE              0.028524      0.055630         -0.017193   \n",
       "FLAG_CONT_MOBILE             0.000370     -0.000794         -0.008290   \n",
       "FLAG_PHONE                  -0.023806     -0.029906          0.000159   \n",
       "FLAG_EMAIL                  -0.001758      0.022619          0.038378   \n",
       "CNT_FAM_MEMBERS              0.009308      0.879161          0.016342   \n",
       "REGION_RATING_CLIENT         0.058899      0.025423         -0.085465   \n",
       "REGION_RATING_CLIENT_W_CITY  0.060893      0.024781         -0.091735   \n",
       "HOUR_APPR_PROCESS_START     -0.024166     -0.007292          0.036459   \n",
       "REG_REGION_NOT_LIVE_REGION   0.005576     -0.013319          0.031191   \n",
       "REG_REGION_NOT_WORK_REGION   0.006942      0.008185          0.062340   \n",
       "LIVE_REGION_NOT_WORK_REGION  0.002819      0.014835          0.058059   \n",
       "REG_CITY_NOT_LIVE_CITY       0.044395      0.020072          0.003574   \n",
       "REG_CITY_NOT_WORK_CITY       0.050994      0.070650          0.006431   \n",
       "LIVE_CITY_NOT_WORK_CITY      0.032518      0.069957          0.008285   \n",
       "EXT_SOURCE_1                -0.155317     -0.138470          0.026232   \n",
       "EXT_SOURCE_2                -0.160472     -0.018015          0.060925   \n",
       "...                               ...           ...               ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE     0.032248     -0.001262         -0.013244   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE     0.009022      0.015232         -0.013015   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE     0.031276     -0.001861         -0.013135   \n",
       "DAYS_LAST_PHONE_CHANGE       0.055218     -0.005865         -0.018585   \n",
       "FLAG_DOCUMENT_2              0.005417      0.001786         -0.001000   \n",
       "FLAG_DOCUMENT_3              0.044346      0.056837         -0.016751   \n",
       "FLAG_DOCUMENT_4             -0.002672     -0.003709          0.000529   \n",
       "FLAG_DOCUMENT_5             -0.000316     -0.016737          0.001507   \n",
       "FLAG_DOCUMENT_6             -0.028602     -0.157024         -0.045878   \n",
       "FLAG_DOCUMENT_7             -0.001520     -0.001498          0.003825   \n",
       "FLAG_DOCUMENT_8             -0.008040      0.051697          0.072451   \n",
       "FLAG_DOCUMENT_9             -0.004352     -0.001997          0.018389   \n",
       "FLAG_DOCUMENT_10            -0.001414     -0.002756          0.000290   \n",
       "FLAG_DOCUMENT_11            -0.004229     -0.005318          0.002315   \n",
       "FLAG_DOCUMENT_12            -0.000756      0.000293          0.002540   \n",
       "FLAG_DOCUMENT_13            -0.011583      0.003945          0.022747   \n",
       "FLAG_DOCUMENT_14            -0.009464     -0.005459          0.020708   \n",
       "FLAG_DOCUMENT_15            -0.006536      0.003609          0.010793   \n",
       "FLAG_DOCUMENT_16            -0.011615      0.010662          0.007269   \n",
       "FLAG_DOCUMENT_17            -0.003378      0.000773          0.002230   \n",
       "FLAG_DOCUMENT_18            -0.007952      0.004031          0.003130   \n",
       "FLAG_DOCUMENT_19            -0.001358      0.000864          0.002408   \n",
       "FLAG_DOCUMENT_20             0.000215      0.000988          0.000242   \n",
       "FLAG_DOCUMENT_21             0.003709     -0.002450         -0.000589   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR   0.000930     -0.000410          0.000709   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY    0.002704     -0.000366          0.002944   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK   0.000788     -0.002436          0.002387   \n",
       "AMT_REQ_CREDIT_BUREAU_MON   -0.012462     -0.010808          0.024700   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT   -0.002022     -0.007836          0.004859   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR   0.019930     -0.041550          0.011690   \n",
       "\n",
       "                             AMT_CREDIT  AMT_ANNUITY  AMT_GOODS_PRICE  \\\n",
       "TARGET                        -0.030369    -0.012817        -0.039645   \n",
       "CNT_CHILDREN                   0.002145     0.021374        -0.001827   \n",
       "AMT_INCOME_TOTAL               0.156870     0.191657         0.159610   \n",
       "AMT_CREDIT                     1.000000     0.770138         0.986968   \n",
       "AMT_ANNUITY                    0.770138     1.000000         0.775109   \n",
       "AMT_GOODS_PRICE                0.986968     0.775109         1.000000   \n",
       "REGION_POPULATION_RELATIVE     0.099738     0.118429         0.103520   \n",
       "DAYS_BIRTH                    -0.055436     0.009445        -0.053442   \n",
       "DAYS_EMPLOYED                 -0.066838    -0.104332        -0.064842   \n",
       "DAYS_REGISTRATION              0.009621     0.038514         0.011565   \n",
       "DAYS_ID_PUBLISH               -0.006575     0.011268        -0.009267   \n",
       "OWN_CAR_AGE                   -0.094191    -0.097057        -0.103733   \n",
       "FLAG_MOBIL                     0.001436     0.000149         0.001399   \n",
       "FLAG_EMP_PHONE                 0.065519     0.103533         0.063487   \n",
       "FLAG_WORK_PHONE               -0.021085    -0.024803         0.001086   \n",
       "FLAG_CONT_MOBILE               0.023653     0.022350         0.020706   \n",
       "FLAG_PHONE                     0.026213     0.010802         0.042179   \n",
       "FLAG_EMAIL                     0.016632     0.071709         0.017048   \n",
       "CNT_FAM_MEMBERS                0.063160     0.075539         0.061185   \n",
       "REGION_RATING_CLIENT          -0.101776    -0.128525        -0.103786   \n",
       "REGION_RATING_CLIENT_W_CITY   -0.110915    -0.141682        -0.112208   \n",
       "HOUR_APPR_PROCESS_START        0.052738     0.052269         0.062320   \n",
       "REG_REGION_NOT_LIVE_REGION     0.024010     0.041299         0.026111   \n",
       "REG_REGION_NOT_WORK_REGION     0.051929     0.079420         0.053171   \n",
       "LIVE_REGION_NOT_WORK_REGION    0.052609     0.074550         0.052864   \n",
       "REG_CITY_NOT_LIVE_CITY        -0.026886    -0.006214        -0.027212   \n",
       "REG_CITY_NOT_WORK_CITY        -0.018856     0.000896        -0.020333   \n",
       "LIVE_CITY_NOT_WORK_CITY        0.000081     0.010084        -0.001309   \n",
       "EXT_SOURCE_1                   0.168429     0.119398         0.175502   \n",
       "EXT_SOURCE_2                   0.131228     0.125804         0.139367   \n",
       "...                                 ...          ...              ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE      -0.021229    -0.022833        -0.022244   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE       0.000239    -0.011731         0.000347   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE      -0.023767    -0.024001        -0.024506   \n",
       "DAYS_LAST_PHONE_CHANGE        -0.073701    -0.063747        -0.076313   \n",
       "FLAG_DOCUMENT_2                0.008905     0.003397         0.010774   \n",
       "FLAG_DOCUMENT_3                0.096365     0.102843         0.074900   \n",
       "FLAG_DOCUMENT_4                0.000630     0.001109         0.001113   \n",
       "FLAG_DOCUMENT_5               -0.011756    -0.006655        -0.005201   \n",
       "FLAG_DOCUMENT_6               -0.046717    -0.073897        -0.050232   \n",
       "FLAG_DOCUMENT_7               -0.004040    -0.002273         0.000202   \n",
       "FLAG_DOCUMENT_8                0.082819     0.130584         0.080482   \n",
       "FLAG_DOCUMENT_9                0.022602     0.033691         0.022574   \n",
       "FLAG_DOCUMENT_10              -0.003100    -0.003369        -0.002134   \n",
       "FLAG_DOCUMENT_11               0.028986    -0.003668         0.035124   \n",
       "FLAG_DOCUMENT_12               0.003857     0.000847         0.004067   \n",
       "FLAG_DOCUMENT_13               0.052429     0.025115         0.052358   \n",
       "FLAG_DOCUMENT_14               0.048828     0.036856         0.048749   \n",
       "FLAG_DOCUMENT_15               0.032252     0.016125         0.032932   \n",
       "FLAG_DOCUMENT_16               0.061925     0.007198         0.058305   \n",
       "FLAG_DOCUMENT_17               0.011743     0.003191         0.012139   \n",
       "FLAG_DOCUMENT_18               0.034329    -0.009745         0.032748   \n",
       "FLAG_DOCUMENT_19               0.021082     0.004573         0.020279   \n",
       "FLAG_DOCUMENT_20               0.031023     0.011718         0.031640   \n",
       "FLAG_DOCUMENT_21              -0.016148    -0.017598        -0.014486   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR    -0.003906     0.003861        -0.003237   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY      0.004238     0.002185         0.004677   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK    -0.001275     0.013881        -0.001007   \n",
       "AMT_REQ_CREDIT_BUREAU_MON      0.054451     0.039148         0.056422   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT      0.015925     0.010124         0.016432   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR    -0.048448    -0.011320        -0.050998   \n",
       "\n",
       "                             REGION_POPULATION_RELATIVE  DAYS_BIRTH  \\\n",
       "TARGET                                        -0.037227    0.078239   \n",
       "CNT_CHILDREN                                  -0.025573    0.330938   \n",
       "AMT_INCOME_TOTAL                               0.074796    0.027261   \n",
       "AMT_CREDIT                                     0.099738   -0.055436   \n",
       "AMT_ANNUITY                                    0.118429    0.009445   \n",
       "AMT_GOODS_PRICE                                0.103520   -0.053442   \n",
       "REGION_POPULATION_RELATIVE                     1.000000   -0.029582   \n",
       "DAYS_BIRTH                                    -0.029582    1.000000   \n",
       "DAYS_EMPLOYED                                 -0.003980   -0.615864   \n",
       "DAYS_REGISTRATION                             -0.053820    0.331912   \n",
       "DAYS_ID_PUBLISH                               -0.003993    0.272691   \n",
       "OWN_CAR_AGE                                   -0.081429    0.005761   \n",
       "FLAG_MOBIL                                     0.001333   -0.003084   \n",
       "FLAG_EMP_PHONE                                 0.004045    0.619888   \n",
       "FLAG_WORK_PHONE                               -0.015628    0.172457   \n",
       "FLAG_CONT_MOBILE                              -0.012478   -0.014985   \n",
       "FLAG_PHONE                                     0.090939   -0.042402   \n",
       "FLAG_EMAIL                                     0.040012    0.088208   \n",
       "CNT_FAM_MEMBERS                               -0.024209    0.278894   \n",
       "REGION_RATING_CLIENT                          -0.532877    0.009361   \n",
       "REGION_RATING_CLIENT_W_CITY                   -0.531535    0.008073   \n",
       "HOUR_APPR_PROCESS_START                        0.171285    0.091064   \n",
       "REG_REGION_NOT_LIVE_REGION                     0.002118    0.065486   \n",
       "REG_REGION_NOT_WORK_REGION                     0.056944    0.095819   \n",
       "LIVE_REGION_NOT_WORK_REGION                    0.081016    0.069567   \n",
       "REG_CITY_NOT_LIVE_CITY                        -0.050499    0.180382   \n",
       "REG_CITY_NOT_WORK_CITY                        -0.044057    0.242401   \n",
       "LIVE_CITY_NOT_WORK_CITY                       -0.015188    0.158882   \n",
       "EXT_SOURCE_1                                   0.099997   -0.600610   \n",
       "EXT_SOURCE_2                                   0.198924   -0.091996   \n",
       "...                                                 ...         ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                       0.006329    0.000206   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                      -0.010638    0.007023   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                       0.002404    0.001925   \n",
       "DAYS_LAST_PHONE_CHANGE                        -0.044013    0.082939   \n",
       "FLAG_DOCUMENT_2                               -0.003040   -0.001191   \n",
       "FLAG_DOCUMENT_3                               -0.084644    0.109666   \n",
       "FLAG_DOCUMENT_4                                0.008102   -0.002789   \n",
       "FLAG_DOCUMENT_5                                0.016032    0.016774   \n",
       "FLAG_DOCUMENT_6                                0.000728   -0.407160   \n",
       "FLAG_DOCUMENT_7                                0.002436    0.001469   \n",
       "FLAG_DOCUMENT_8                                0.088523    0.113243   \n",
       "FLAG_DOCUMENT_9                                0.038434    0.018213   \n",
       "FLAG_DOCUMENT_10                               0.001992   -0.000168   \n",
       "FLAG_DOCUMENT_11                               0.024632    0.044716   \n",
       "FLAG_DOCUMENT_12                              -0.000404    0.000236   \n",
       "FLAG_DOCUMENT_13                               0.031186    0.026333   \n",
       "FLAG_DOCUMENT_14                               0.032202    0.030733   \n",
       "FLAG_DOCUMENT_15                               0.009446    0.012953   \n",
       "FLAG_DOCUMENT_16                               0.006313    0.024044   \n",
       "FLAG_DOCUMENT_17                               0.007414    0.007877   \n",
       "FLAG_DOCUMENT_18                               0.013367    0.044498   \n",
       "FLAG_DOCUMENT_19                               0.002364    0.003614   \n",
       "FLAG_DOCUMENT_20                              -0.000045    0.009015   \n",
       "FLAG_DOCUMENT_21                               0.003437    0.027282   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR                    -0.002225    0.005285   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY                      0.001399    0.002255   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK                    -0.002149   -0.001336   \n",
       "AMT_REQ_CREDIT_BUREAU_MON                      0.078607    0.001372   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT                     -0.001279   -0.011799   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR                     0.001003   -0.071983   \n",
       "\n",
       "                             DAYS_EMPLOYED  DAYS_REGISTRATION  \\\n",
       "TARGET                           -0.044932           0.041975   \n",
       "CNT_CHILDREN                     -0.239818           0.183395   \n",
       "AMT_INCOME_TOTAL                 -0.064223           0.027805   \n",
       "AMT_CREDIT                       -0.066838           0.009621   \n",
       "AMT_ANNUITY                      -0.104332           0.038514   \n",
       "AMT_GOODS_PRICE                  -0.064842           0.011565   \n",
       "REGION_POPULATION_RELATIVE       -0.003980          -0.053820   \n",
       "DAYS_BIRTH                       -0.615864           0.331912   \n",
       "DAYS_EMPLOYED                     1.000000          -0.210242   \n",
       "DAYS_REGISTRATION                -0.210242           1.000000   \n",
       "DAYS_ID_PUBLISH                  -0.272378           0.101896   \n",
       "OWN_CAR_AGE                       0.028830          -0.025991   \n",
       "FLAG_MOBIL                        0.000818          -0.000100   \n",
       "FLAG_EMP_PHONE                   -0.999755           0.212361   \n",
       "FLAG_WORK_PHONE                  -0.233972           0.058283   \n",
       "FLAG_CONT_MOBILE                  0.012745          -0.003848   \n",
       "FLAG_PHONE                        0.015291          -0.075188   \n",
       "FLAG_EMAIL                       -0.062112           0.034388   \n",
       "CNT_FAM_MEMBERS                  -0.233549           0.173416   \n",
       "REGION_RATING_CLIENT              0.032750           0.080210   \n",
       "REGION_RATING_CLIENT_W_CITY       0.034624           0.074038   \n",
       "HOUR_APPR_PROCESS_START          -0.091138          -0.010908   \n",
       "REG_REGION_NOT_LIVE_REGION       -0.035803           0.028213   \n",
       "REG_REGION_NOT_WORK_REGION       -0.107150           0.036787   \n",
       "LIVE_REGION_NOT_WORK_REGION      -0.095539           0.027560   \n",
       "REG_CITY_NOT_LIVE_CITY           -0.090516           0.064334   \n",
       "REG_CITY_NOT_WORK_CITY           -0.254559           0.099874   \n",
       "LIVE_CITY_NOT_WORK_CITY          -0.218101           0.072658   \n",
       "EXT_SOURCE_1                      0.289848          -0.181095   \n",
       "EXT_SOURCE_2                     -0.020767          -0.059913   \n",
       "...                                    ...                ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE          0.016717           0.003361   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE          0.005888           0.009088   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE          0.014211           0.004538   \n",
       "DAYS_LAST_PHONE_CHANGE            0.023032           0.056983   \n",
       "FLAG_DOCUMENT_2                  -0.003090          -0.004466   \n",
       "FLAG_DOCUMENT_3                  -0.249082           0.033740   \n",
       "FLAG_DOCUMENT_4                   0.000437          -0.004221   \n",
       "FLAG_DOCUMENT_5                  -0.020041          -0.001243   \n",
       "FLAG_DOCUMENT_6                   0.597484          -0.137769   \n",
       "FLAG_DOCUMENT_7                  -0.002221           0.001366   \n",
       "FLAG_DOCUMENT_8                  -0.121571           0.057041   \n",
       "FLAG_DOCUMENT_9                  -0.023834           0.009898   \n",
       "FLAG_DOCUMENT_10                 -0.000439           0.000292   \n",
       "FLAG_DOCUMENT_11                 -0.028915           0.014731   \n",
       "FLAG_DOCUMENT_12                 -0.001225           0.001682   \n",
       "FLAG_DOCUMENT_13                 -0.025778           0.015470   \n",
       "FLAG_DOCUMENT_14                 -0.023383           0.011636   \n",
       "FLAG_DOCUMENT_15                 -0.014285           0.008195   \n",
       "FLAG_DOCUMENT_16                 -0.042905           0.025935   \n",
       "FLAG_DOCUMENT_17                 -0.007187           0.002102   \n",
       "FLAG_DOCUMENT_18                 -0.040396           0.017040   \n",
       "FLAG_DOCUMENT_19                 -0.010040           0.004764   \n",
       "FLAG_DOCUMENT_20                 -0.010135           0.006971   \n",
       "FLAG_DOCUMENT_21                 -0.008396           0.003859   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR       -0.004735          -0.002855   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY         0.000472          -0.000508   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK        0.003072          -0.001069   \n",
       "AMT_REQ_CREDIT_BUREAU_MON        -0.034457          -0.011353   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT         0.015345          -0.001308   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR        0.049988          -0.024805   \n",
       "\n",
       "                                        ...              FLAG_DOCUMENT_18  \\\n",
       "TARGET                                  ...                     -0.007952   \n",
       "CNT_CHILDREN                            ...                      0.004031   \n",
       "AMT_INCOME_TOTAL                        ...                      0.003130   \n",
       "AMT_CREDIT                              ...                      0.034329   \n",
       "AMT_ANNUITY                             ...                     -0.009745   \n",
       "AMT_GOODS_PRICE                         ...                      0.032748   \n",
       "REGION_POPULATION_RELATIVE              ...                      0.013367   \n",
       "DAYS_BIRTH                              ...                      0.044498   \n",
       "DAYS_EMPLOYED                           ...                     -0.040396   \n",
       "DAYS_REGISTRATION                       ...                      0.017040   \n",
       "DAYS_ID_PUBLISH                         ...                      0.014084   \n",
       "OWN_CAR_AGE                             ...                     -0.011043   \n",
       "FLAG_MOBIL                              ...                     -0.019919   \n",
       "FLAG_EMP_PHONE                          ...                      0.040548   \n",
       "FLAG_WORK_PHONE                         ...                      0.032049   \n",
       "FLAG_CONT_MOBILE                        ...                     -0.043068   \n",
       "FLAG_PHONE                              ...                      0.004055   \n",
       "FLAG_EMAIL                              ...                     -0.008110   \n",
       "CNT_FAM_MEMBERS                         ...                      0.001485   \n",
       "REGION_RATING_CLIENT                    ...                     -0.012532   \n",
       "REGION_RATING_CLIENT_W_CITY             ...                     -0.013672   \n",
       "HOUR_APPR_PROCESS_START                 ...                      0.021584   \n",
       "REG_REGION_NOT_LIVE_REGION              ...                      0.008344   \n",
       "REG_REGION_NOT_WORK_REGION              ...                      0.007436   \n",
       "LIVE_REGION_NOT_WORK_REGION             ...                      0.004282   \n",
       "REG_CITY_NOT_LIVE_CITY                  ...                      0.013432   \n",
       "REG_CITY_NOT_WORK_CITY                  ...                      0.013919   \n",
       "LIVE_CITY_NOT_WORK_CITY                 ...                      0.006332   \n",
       "EXT_SOURCE_1                            ...                     -0.025739   \n",
       "EXT_SOURCE_2                            ...                      0.001874   \n",
       "...                                     ...                           ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                ...                     -0.001019   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                ...                      0.003258   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                ...                     -0.003316   \n",
       "DAYS_LAST_PHONE_CHANGE                  ...                      0.047604   \n",
       "FLAG_DOCUMENT_2                         ...                     -0.000589   \n",
       "FLAG_DOCUMENT_3                         ...                      0.007976   \n",
       "FLAG_DOCUMENT_4                         ...                     -0.000816   \n",
       "FLAG_DOCUMENT_5                         ...                     -0.010622   \n",
       "FLAG_DOCUMENT_6                         ...                     -0.023915   \n",
       "FLAG_DOCUMENT_7                         ...                     -0.001254   \n",
       "FLAG_DOCUMENT_8                         ...                      0.007756   \n",
       "FLAG_DOCUMENT_9                         ...                      0.001895   \n",
       "FLAG_DOCUMENT_10                        ...                     -0.000432   \n",
       "FLAG_DOCUMENT_11                        ...                     -0.005674   \n",
       "FLAG_DOCUMENT_12                        ...                     -0.000231   \n",
       "FLAG_DOCUMENT_13                        ...                     -0.005385   \n",
       "FLAG_DOCUMENT_14                        ...                     -0.004913   \n",
       "FLAG_DOCUMENT_15                        ...                     -0.003151   \n",
       "FLAG_DOCUMENT_16                        ...                     -0.009066   \n",
       "FLAG_DOCUMENT_17                        ...                     -0.001479   \n",
       "FLAG_DOCUMENT_18                        ...                      1.000000   \n",
       "FLAG_DOCUMENT_19                        ...                     -0.002209   \n",
       "FLAG_DOCUMENT_20                        ...                      0.081589   \n",
       "FLAG_DOCUMENT_21                        ...                      0.006259   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR              ...                     -0.002231   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY               ...                      0.013281   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK              ...                     -0.004640   \n",
       "AMT_REQ_CREDIT_BUREAU_MON               ...                     -0.001565   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT               ...                     -0.005125   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR              ...                     -0.047432   \n",
       "\n",
       "                             FLAG_DOCUMENT_19  FLAG_DOCUMENT_20  \\\n",
       "TARGET                              -0.001358          0.000215   \n",
       "CNT_CHILDREN                         0.000864          0.000988   \n",
       "AMT_INCOME_TOTAL                     0.002408          0.000242   \n",
       "AMT_CREDIT                           0.021082          0.031023   \n",
       "AMT_ANNUITY                          0.004573          0.011718   \n",
       "AMT_GOODS_PRICE                      0.020279          0.031640   \n",
       "REGION_POPULATION_RELATIVE           0.002364         -0.000045   \n",
       "DAYS_BIRTH                           0.003614          0.009015   \n",
       "DAYS_EMPLOYED                       -0.010040         -0.010135   \n",
       "DAYS_REGISTRATION                    0.004764          0.006971   \n",
       "DAYS_ID_PUBLISH                      0.000903          0.000070   \n",
       "OWN_CAR_AGE                         -0.004992         -0.007458   \n",
       "FLAG_MOBIL                           0.000044          0.000041   \n",
       "FLAG_EMP_PHONE                       0.010049          0.010183   \n",
       "FLAG_WORK_PHONE                      0.011854          0.001771   \n",
       "FLAG_CONT_MOBILE                    -0.005123          0.000974   \n",
       "FLAG_PHONE                           0.009660          0.000692   \n",
       "FLAG_EMAIL                          -0.002525         -0.001778   \n",
       "CNT_FAM_MEMBERS                      0.002205          0.000188   \n",
       "REGION_RATING_CLIENT                -0.001205          0.002217   \n",
       "REGION_RATING_CLIENT_W_CITY         -0.001530          0.002609   \n",
       "HOUR_APPR_PROCESS_START              0.002507          0.003277   \n",
       "REG_REGION_NOT_LIVE_REGION          -0.001934         -0.002794   \n",
       "REG_REGION_NOT_WORK_REGION           0.001038         -0.001263   \n",
       "LIVE_REGION_NOT_WORK_REGION          0.003078         -0.000251   \n",
       "REG_CITY_NOT_LIVE_CITY              -0.005119         -0.001181   \n",
       "REG_CITY_NOT_WORK_CITY              -0.003854          0.000703   \n",
       "LIVE_CITY_NOT_WORK_CITY             -0.002035          0.001877   \n",
       "EXT_SOURCE_1                         0.005131         -0.005102   \n",
       "EXT_SOURCE_2                         0.003256          0.000614   \n",
       "...                                       ...               ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE            -0.003363          0.000203   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE             0.001001          0.000351   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE            -0.003063          0.000157   \n",
       "DAYS_LAST_PHONE_CHANGE               0.006852          0.009171   \n",
       "FLAG_DOCUMENT_2                     -0.000159         -0.000146   \n",
       "FLAG_DOCUMENT_3                      0.009423          0.007396   \n",
       "FLAG_DOCUMENT_4                     -0.000220         -0.000203   \n",
       "FLAG_DOCUMENT_5                     -0.003023         -0.002791   \n",
       "FLAG_DOCUMENT_6                     -0.004759         -0.005981   \n",
       "FLAG_DOCUMENT_7                     -0.000338         -0.000312   \n",
       "FLAG_DOCUMENT_8                      0.000053          0.003859   \n",
       "FLAG_DOCUMENT_9                     -0.001526         -0.001409   \n",
       "FLAG_DOCUMENT_10                    -0.000116         -0.000107   \n",
       "FLAG_DOCUMENT_11                    -0.001529         -0.001412   \n",
       "FLAG_DOCUMENT_12                    -0.000062         -0.000057   \n",
       "FLAG_DOCUMENT_13                    -0.001451          0.042520   \n",
       "FLAG_DOCUMENT_14                    -0.001324          0.030805   \n",
       "FLAG_DOCUMENT_15                    -0.000849          0.028299   \n",
       "FLAG_DOCUMENT_16                    -0.002444          0.082229   \n",
       "FLAG_DOCUMENT_17                    -0.000399          0.026167   \n",
       "FLAG_DOCUMENT_18                    -0.002209          0.081589   \n",
       "FLAG_DOCUMENT_19                     1.000000          0.034981   \n",
       "FLAG_DOCUMENT_20                     0.034981          1.000000   \n",
       "FLAG_DOCUMENT_21                    -0.000447          0.007480   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR           0.003456         -0.001844   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY            0.001126         -0.000120   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK          -0.001275         -0.001770   \n",
       "AMT_REQ_CREDIT_BUREAU_MON           -0.002729          0.001285   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT           -0.001575         -0.001010   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR          -0.007009         -0.012126   \n",
       "\n",
       "                             FLAG_DOCUMENT_21  AMT_REQ_CREDIT_BUREAU_HOUR  \\\n",
       "TARGET                               0.003709                    0.000930   \n",
       "CNT_CHILDREN                        -0.002450                   -0.000410   \n",
       "AMT_INCOME_TOTAL                    -0.000589                    0.000709   \n",
       "AMT_CREDIT                          -0.016148                   -0.003906   \n",
       "AMT_ANNUITY                         -0.017598                    0.003861   \n",
       "AMT_GOODS_PRICE                     -0.014486                   -0.003237   \n",
       "REGION_POPULATION_RELATIVE           0.003437                   -0.002225   \n",
       "DAYS_BIRTH                           0.027282                    0.005285   \n",
       "DAYS_EMPLOYED                       -0.008396                   -0.004735   \n",
       "DAYS_REGISTRATION                    0.003859                   -0.002855   \n",
       "DAYS_ID_PUBLISH                      0.017246                    0.004761   \n",
       "OWN_CAR_AGE                          0.001236                   -0.000202   \n",
       "FLAG_MOBIL                           0.000033                         NaN   \n",
       "FLAG_EMP_PHONE                       0.008579                    0.004619   \n",
       "FLAG_WORK_PHONE                      0.001541                   -0.005358   \n",
       "FLAG_CONT_MOBILE                    -0.015677                   -0.004600   \n",
       "FLAG_PHONE                           0.000020                   -0.003251   \n",
       "FLAG_EMAIL                          -0.000647                    0.003390   \n",
       "CNT_FAM_MEMBERS                     -0.005801                    0.000660   \n",
       "REGION_RATING_CLIENT                -0.001887                    0.006312   \n",
       "REGION_RATING_CLIENT_W_CITY         -0.001501                    0.006239   \n",
       "HOUR_APPR_PROCESS_START              0.003998                   -0.016005   \n",
       "REG_REGION_NOT_LIVE_REGION           0.005006                   -0.002044   \n",
       "REG_REGION_NOT_WORK_REGION          -0.000995                   -0.001749   \n",
       "LIVE_REGION_NOT_WORK_REGION         -0.001969                   -0.000996   \n",
       "REG_CITY_NOT_LIVE_CITY               0.002614                    0.000549   \n",
       "REG_CITY_NOT_WORK_CITY               0.003487                    0.000481   \n",
       "LIVE_CITY_NOT_WORK_CITY              0.004401                   -0.000924   \n",
       "EXT_SOURCE_1                        -0.019208                   -0.003963   \n",
       "EXT_SOURCE_2                        -0.007236                   -0.004077   \n",
       "...                                       ...                         ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE            -0.000652                   -0.000177   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE            -0.000552                    0.000413   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE             0.000393                   -0.001461   \n",
       "DAYS_LAST_PHONE_CHANGE               0.009826                   -0.000858   \n",
       "FLAG_DOCUMENT_2                     -0.000119                         NaN   \n",
       "FLAG_DOCUMENT_3                     -0.025510                   -0.000761   \n",
       "FLAG_DOCUMENT_4                     -0.000165                   -0.000725   \n",
       "FLAG_DOCUMENT_5                      0.000645                   -0.001020   \n",
       "FLAG_DOCUMENT_6                     -0.005688                   -0.001567   \n",
       "FLAG_DOCUMENT_7                     -0.000254                   -0.001036   \n",
       "FLAG_DOCUMENT_8                     -0.001548                    0.004995   \n",
       "FLAG_DOCUMENT_9                     -0.001145                   -0.002482   \n",
       "FLAG_DOCUMENT_10                    -0.000087                   -0.000392   \n",
       "FLAG_DOCUMENT_11                    -0.001147                   -0.002918   \n",
       "FLAG_DOCUMENT_12                    -0.000047                    0.016142   \n",
       "FLAG_DOCUMENT_13                     0.004908                   -0.001862   \n",
       "FLAG_DOCUMENT_14                     0.002291                    0.001168   \n",
       "FLAG_DOCUMENT_15                    -0.000637                   -0.000328   \n",
       "FLAG_DOCUMENT_16                     0.003544                   -0.002259   \n",
       "FLAG_DOCUMENT_17                    -0.000299                   -0.001282   \n",
       "FLAG_DOCUMENT_18                     0.006259                   -0.002231   \n",
       "FLAG_DOCUMENT_19                    -0.000447                    0.003456   \n",
       "FLAG_DOCUMENT_20                     0.007480                   -0.001844   \n",
       "FLAG_DOCUMENT_21                     1.000000                   -0.001365   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR          -0.001365                    1.000000   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY           -0.001130                    0.230374   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK           0.000081                    0.004706   \n",
       "AMT_REQ_CREDIT_BUREAU_MON           -0.003612                   -0.000018   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT           -0.002004                   -0.002716   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR          -0.005457                   -0.004597   \n",
       "\n",
       "                             AMT_REQ_CREDIT_BUREAU_DAY  \\\n",
       "TARGET                                        0.002704   \n",
       "CNT_CHILDREN                                 -0.000366   \n",
       "AMT_INCOME_TOTAL                              0.002944   \n",
       "AMT_CREDIT                                    0.004238   \n",
       "AMT_ANNUITY                                   0.002185   \n",
       "AMT_GOODS_PRICE                               0.004677   \n",
       "REGION_POPULATION_RELATIVE                    0.001399   \n",
       "DAYS_BIRTH                                    0.002255   \n",
       "DAYS_EMPLOYED                                 0.000472   \n",
       "DAYS_REGISTRATION                            -0.000508   \n",
       "DAYS_ID_PUBLISH                              -0.000999   \n",
       "OWN_CAR_AGE                                  -0.008650   \n",
       "FLAG_MOBIL                                         NaN   \n",
       "FLAG_EMP_PHONE                               -0.000438   \n",
       "FLAG_WORK_PHONE                              -0.004434   \n",
       "FLAG_CONT_MOBILE                             -0.002481   \n",
       "FLAG_PHONE                                   -0.000833   \n",
       "FLAG_EMAIL                                    0.003849   \n",
       "CNT_FAM_MEMBERS                              -0.001215   \n",
       "REGION_RATING_CLIENT                         -0.002241   \n",
       "REGION_RATING_CLIENT_W_CITY                  -0.001953   \n",
       "HOUR_APPR_PROCESS_START                       0.002274   \n",
       "REG_REGION_NOT_LIVE_REGION                   -0.001342   \n",
       "REG_REGION_NOT_WORK_REGION                   -0.001775   \n",
       "LIVE_REGION_NOT_WORK_REGION                  -0.000993   \n",
       "REG_CITY_NOT_LIVE_CITY                       -0.002152   \n",
       "REG_CITY_NOT_WORK_CITY                       -0.001982   \n",
       "LIVE_CITY_NOT_WORK_CITY                      -0.001960   \n",
       "EXT_SOURCE_1                                 -0.005087   \n",
       "EXT_SOURCE_2                                  0.000553   \n",
       "...                                                ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                     -0.001272   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                     -0.002542   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                     -0.001822   \n",
       "DAYS_LAST_PHONE_CHANGE                        0.002337   \n",
       "FLAG_DOCUMENT_2                                    NaN   \n",
       "FLAG_DOCUMENT_3                               0.000982   \n",
       "FLAG_DOCUMENT_4                              -0.000600   \n",
       "FLAG_DOCUMENT_5                              -0.000607   \n",
       "FLAG_DOCUMENT_6                               0.003607   \n",
       "FLAG_DOCUMENT_7                              -0.000858   \n",
       "FLAG_DOCUMENT_8                               0.000932   \n",
       "FLAG_DOCUMENT_9                               0.000012   \n",
       "FLAG_DOCUMENT_10                             -0.000324   \n",
       "FLAG_DOCUMENT_11                              0.003891   \n",
       "FLAG_DOCUMENT_12                              0.012206   \n",
       "FLAG_DOCUMENT_13                              0.007012   \n",
       "FLAG_DOCUMENT_14                              0.013119   \n",
       "FLAG_DOCUMENT_15                              0.003279   \n",
       "FLAG_DOCUMENT_16                              0.006318   \n",
       "FLAG_DOCUMENT_17                             -0.001061   \n",
       "FLAG_DOCUMENT_18                              0.013281   \n",
       "FLAG_DOCUMENT_19                              0.001126   \n",
       "FLAG_DOCUMENT_20                             -0.000120   \n",
       "FLAG_DOCUMENT_21                             -0.001130   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR                    0.230374   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY                     1.000000   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK                    0.217412   \n",
       "AMT_REQ_CREDIT_BUREAU_MON                    -0.005258   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT                    -0.004416   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR                   -0.003355   \n",
       "\n",
       "                             AMT_REQ_CREDIT_BUREAU_WEEK  \\\n",
       "TARGET                                         0.000788   \n",
       "CNT_CHILDREN                                  -0.002436   \n",
       "AMT_INCOME_TOTAL                               0.002387   \n",
       "AMT_CREDIT                                    -0.001275   \n",
       "AMT_ANNUITY                                    0.013881   \n",
       "AMT_GOODS_PRICE                               -0.001007   \n",
       "REGION_POPULATION_RELATIVE                    -0.002149   \n",
       "DAYS_BIRTH                                    -0.001336   \n",
       "DAYS_EMPLOYED                                  0.003072   \n",
       "DAYS_REGISTRATION                             -0.001069   \n",
       "DAYS_ID_PUBLISH                               -0.001249   \n",
       "OWN_CAR_AGE                                    0.001661   \n",
       "FLAG_MOBIL                                          NaN   \n",
       "FLAG_EMP_PHONE                                -0.003028   \n",
       "FLAG_WORK_PHONE                               -0.004404   \n",
       "FLAG_CONT_MOBILE                              -0.008496   \n",
       "FLAG_PHONE                                    -0.000201   \n",
       "FLAG_EMAIL                                     0.021581   \n",
       "CNT_FAM_MEMBERS                               -0.001174   \n",
       "REGION_RATING_CLIENT                           0.001683   \n",
       "REGION_RATING_CLIENT_W_CITY                    0.001102   \n",
       "HOUR_APPR_PROCESS_START                       -0.002985   \n",
       "REG_REGION_NOT_LIVE_REGION                     0.001227   \n",
       "REG_REGION_NOT_WORK_REGION                    -0.000705   \n",
       "LIVE_REGION_NOT_WORK_REGION                   -0.001486   \n",
       "REG_CITY_NOT_LIVE_CITY                        -0.001517   \n",
       "REG_CITY_NOT_WORK_CITY                        -0.002753   \n",
       "LIVE_CITY_NOT_WORK_CITY                       -0.003325   \n",
       "EXT_SOURCE_1                                  -0.001801   \n",
       "EXT_SOURCE_2                                   0.001507   \n",
       "...                                                 ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                      -0.002167   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                       0.000197   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                      -0.002536   \n",
       "DAYS_LAST_PHONE_CHANGE                        -0.003495   \n",
       "FLAG_DOCUMENT_2                                     NaN   \n",
       "FLAG_DOCUMENT_3                                0.008175   \n",
       "FLAG_DOCUMENT_4                               -0.001595   \n",
       "FLAG_DOCUMENT_5                                0.001904   \n",
       "FLAG_DOCUMENT_6                                0.002819   \n",
       "FLAG_DOCUMENT_7                               -0.000925   \n",
       "FLAG_DOCUMENT_8                                0.000641   \n",
       "FLAG_DOCUMENT_9                                0.000223   \n",
       "FLAG_DOCUMENT_10                              -0.000861   \n",
       "FLAG_DOCUMENT_11                              -0.000336   \n",
       "FLAG_DOCUMENT_12                              -0.000460   \n",
       "FLAG_DOCUMENT_13                              -0.003936   \n",
       "FLAG_DOCUMENT_14                              -0.000847   \n",
       "FLAG_DOCUMENT_15                               0.001429   \n",
       "FLAG_DOCUMENT_16                              -0.009751   \n",
       "FLAG_DOCUMENT_17                              -0.002819   \n",
       "FLAG_DOCUMENT_18                              -0.004640   \n",
       "FLAG_DOCUMENT_19                              -0.001275   \n",
       "FLAG_DOCUMENT_20                              -0.001770   \n",
       "FLAG_DOCUMENT_21                               0.000081   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR                     0.004706   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY                      0.217412   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK                     1.000000   \n",
       "AMT_REQ_CREDIT_BUREAU_MON                     -0.014096   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT                     -0.015115   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR                     0.018917   \n",
       "\n",
       "                             AMT_REQ_CREDIT_BUREAU_MON  \\\n",
       "TARGET                                       -0.012462   \n",
       "CNT_CHILDREN                                 -0.010808   \n",
       "AMT_INCOME_TOTAL                              0.024700   \n",
       "AMT_CREDIT                                    0.054451   \n",
       "AMT_ANNUITY                                   0.039148   \n",
       "AMT_GOODS_PRICE                               0.056422   \n",
       "REGION_POPULATION_RELATIVE                    0.078607   \n",
       "DAYS_BIRTH                                    0.001372   \n",
       "DAYS_EMPLOYED                                -0.034457   \n",
       "DAYS_REGISTRATION                            -0.011353   \n",
       "DAYS_ID_PUBLISH                              -0.009660   \n",
       "OWN_CAR_AGE                                  -0.021867   \n",
       "FLAG_MOBIL                                         NaN   \n",
       "FLAG_EMP_PHONE                                0.034092   \n",
       "FLAG_WORK_PHONE                              -0.001829   \n",
       "FLAG_CONT_MOBILE                              0.005922   \n",
       "FLAG_PHONE                                    0.031992   \n",
       "FLAG_EMAIL                                    0.025669   \n",
       "CNT_FAM_MEMBERS                              -0.008021   \n",
       "REGION_RATING_CLIENT                         -0.069712   \n",
       "REGION_RATING_CLIENT_W_CITY                  -0.067741   \n",
       "HOUR_APPR_PROCESS_START                       0.037673   \n",
       "REG_REGION_NOT_LIVE_REGION                    0.000316   \n",
       "REG_REGION_NOT_WORK_REGION                    0.008360   \n",
       "LIVE_REGION_NOT_WORK_REGION                   0.010246   \n",
       "REG_CITY_NOT_LIVE_CITY                       -0.010881   \n",
       "REG_CITY_NOT_WORK_CITY                       -0.012182   \n",
       "LIVE_CITY_NOT_WORK_CITY                      -0.007592   \n",
       "EXT_SOURCE_1                                  0.030820   \n",
       "EXT_SOURCE_2                                  0.051981   \n",
       "...                                                ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                      0.000331   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                      0.001639   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                     -0.001462   \n",
       "DAYS_LAST_PHONE_CHANGE                       -0.041244   \n",
       "FLAG_DOCUMENT_2                                    NaN   \n",
       "FLAG_DOCUMENT_3                               0.010360   \n",
       "FLAG_DOCUMENT_4                               0.005005   \n",
       "FLAG_DOCUMENT_5                               0.006739   \n",
       "FLAG_DOCUMENT_6                              -0.023518   \n",
       "FLAG_DOCUMENT_7                              -0.003055   \n",
       "FLAG_DOCUMENT_8                               0.019248   \n",
       "FLAG_DOCUMENT_9                               0.005266   \n",
       "FLAG_DOCUMENT_10                              0.000903   \n",
       "FLAG_DOCUMENT_11                             -0.002026   \n",
       "FLAG_DOCUMENT_12                              0.002193   \n",
       "FLAG_DOCUMENT_13                              0.011011   \n",
       "FLAG_DOCUMENT_14                              0.004658   \n",
       "FLAG_DOCUMENT_15                              0.002403   \n",
       "FLAG_DOCUMENT_16                              0.002032   \n",
       "FLAG_DOCUMENT_17                              0.000231   \n",
       "FLAG_DOCUMENT_18                             -0.001565   \n",
       "FLAG_DOCUMENT_19                             -0.002729   \n",
       "FLAG_DOCUMENT_20                              0.001285   \n",
       "FLAG_DOCUMENT_21                             -0.003612   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR                   -0.000018   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY                    -0.005258   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK                   -0.014096   \n",
       "AMT_REQ_CREDIT_BUREAU_MON                     1.000000   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT                    -0.007789   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR                   -0.004975   \n",
       "\n",
       "                             AMT_REQ_CREDIT_BUREAU_QRT  \\\n",
       "TARGET                                       -0.002022   \n",
       "CNT_CHILDREN                                 -0.007836   \n",
       "AMT_INCOME_TOTAL                              0.004859   \n",
       "AMT_CREDIT                                    0.015925   \n",
       "AMT_ANNUITY                                   0.010124   \n",
       "AMT_GOODS_PRICE                               0.016432   \n",
       "REGION_POPULATION_RELATIVE                   -0.001279   \n",
       "DAYS_BIRTH                                   -0.011799   \n",
       "DAYS_EMPLOYED                                 0.015345   \n",
       "DAYS_REGISTRATION                            -0.001308   \n",
       "DAYS_ID_PUBLISH                              -0.006200   \n",
       "OWN_CAR_AGE                                  -0.017632   \n",
       "FLAG_MOBIL                                         NaN   \n",
       "FLAG_EMP_PHONE                               -0.015271   \n",
       "FLAG_WORK_PHONE                              -0.022964   \n",
       "FLAG_CONT_MOBILE                              0.006934   \n",
       "FLAG_PHONE                                   -0.009969   \n",
       "FLAG_EMAIL                                    0.013426   \n",
       "CNT_FAM_MEMBERS                              -0.004739   \n",
       "REGION_RATING_CLIENT                          0.005436   \n",
       "REGION_RATING_CLIENT_W_CITY                   0.004773   \n",
       "HOUR_APPR_PROCESS_START                      -0.000680   \n",
       "REG_REGION_NOT_LIVE_REGION                   -0.001813   \n",
       "REG_REGION_NOT_WORK_REGION                   -0.004959   \n",
       "LIVE_REGION_NOT_WORK_REGION                  -0.005655   \n",
       "REG_CITY_NOT_LIVE_CITY                        0.000933   \n",
       "REG_CITY_NOT_WORK_CITY                       -0.005227   \n",
       "LIVE_CITY_NOT_WORK_CITY                      -0.006792   \n",
       "EXT_SOURCE_1                                 -0.003631   \n",
       "EXT_SOURCE_2                                 -0.002849   \n",
       "...                                                ...   \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                     -0.001302   \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                      0.003932   \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                     -0.000291   \n",
       "DAYS_LAST_PHONE_CHANGE                       -0.001451   \n",
       "FLAG_DOCUMENT_2                                    NaN   \n",
       "FLAG_DOCUMENT_3                               0.009576   \n",
       "FLAG_DOCUMENT_4                               0.000313   \n",
       "FLAG_DOCUMENT_5                              -0.004568   \n",
       "FLAG_DOCUMENT_6                               0.010201   \n",
       "FLAG_DOCUMENT_7                              -0.000352   \n",
       "FLAG_DOCUMENT_8                              -0.003269   \n",
       "FLAG_DOCUMENT_9                              -0.003152   \n",
       "FLAG_DOCUMENT_10                              0.002900   \n",
       "FLAG_DOCUMENT_11                             -0.007402   \n",
       "FLAG_DOCUMENT_12                             -0.000917   \n",
       "FLAG_DOCUMENT_13                             -0.004401   \n",
       "FLAG_DOCUMENT_14                             -0.004402   \n",
       "FLAG_DOCUMENT_15                             -0.001556   \n",
       "FLAG_DOCUMENT_16                              0.000706   \n",
       "FLAG_DOCUMENT_17                             -0.001385   \n",
       "FLAG_DOCUMENT_18                             -0.005125   \n",
       "FLAG_DOCUMENT_19                             -0.001575   \n",
       "FLAG_DOCUMENT_20                             -0.001010   \n",
       "FLAG_DOCUMENT_21                             -0.002004   \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR                   -0.002716   \n",
       "AMT_REQ_CREDIT_BUREAU_DAY                    -0.004416   \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK                   -0.015115   \n",
       "AMT_REQ_CREDIT_BUREAU_MON                    -0.007789   \n",
       "AMT_REQ_CREDIT_BUREAU_QRT                     1.000000   \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR                    0.076208   \n",
       "\n",
       "                             AMT_REQ_CREDIT_BUREAU_YEAR  \n",
       "TARGET                                         0.019930  \n",
       "CNT_CHILDREN                                  -0.041550  \n",
       "AMT_INCOME_TOTAL                               0.011690  \n",
       "AMT_CREDIT                                    -0.048448  \n",
       "AMT_ANNUITY                                   -0.011320  \n",
       "AMT_GOODS_PRICE                               -0.050998  \n",
       "REGION_POPULATION_RELATIVE                     0.001003  \n",
       "DAYS_BIRTH                                    -0.071983  \n",
       "DAYS_EMPLOYED                                  0.049988  \n",
       "DAYS_REGISTRATION                             -0.024805  \n",
       "DAYS_ID_PUBLISH                               -0.035099  \n",
       "OWN_CAR_AGE                                   -0.014384  \n",
       "FLAG_MOBIL                                          NaN  \n",
       "FLAG_EMP_PHONE                                -0.049949  \n",
       "FLAG_WORK_PHONE                               -0.075875  \n",
       "FLAG_CONT_MOBILE                               0.026700  \n",
       "FLAG_PHONE                                    -0.031587  \n",
       "FLAG_EMAIL                                     0.053354  \n",
       "CNT_FAM_MEMBERS                               -0.028571  \n",
       "REGION_RATING_CLIENT                           0.011494  \n",
       "REGION_RATING_CLIENT_W_CITY                    0.010683  \n",
       "HOUR_APPR_PROCESS_START                       -0.030943  \n",
       "REG_REGION_NOT_LIVE_REGION                    -0.017095  \n",
       "REG_REGION_NOT_WORK_REGION                    -0.021587  \n",
       "LIVE_REGION_NOT_WORK_REGION                   -0.017429  \n",
       "REG_CITY_NOT_LIVE_CITY                        -0.004793  \n",
       "REG_CITY_NOT_WORK_CITY                        -0.008013  \n",
       "LIVE_CITY_NOT_WORK_CITY                       -0.008415  \n",
       "EXT_SOURCE_1                                   0.006562  \n",
       "EXT_SOURCE_2                                  -0.021984  \n",
       "...                                                 ...  \n",
       "DEF_30_CNT_SOCIAL_CIRCLE                       0.018590  \n",
       "OBS_60_CNT_SOCIAL_CIRCLE                       0.032957  \n",
       "DEF_60_CNT_SOCIAL_CIRCLE                       0.017190  \n",
       "DAYS_LAST_PHONE_CHANGE                        -0.112725  \n",
       "FLAG_DOCUMENT_2                                     NaN  \n",
       "FLAG_DOCUMENT_3                                0.048214  \n",
       "FLAG_DOCUMENT_4                                0.000297  \n",
       "FLAG_DOCUMENT_5                               -0.010234  \n",
       "FLAG_DOCUMENT_6                                0.012223  \n",
       "FLAG_DOCUMENT_7                                0.003542  \n",
       "FLAG_DOCUMENT_8                               -0.024333  \n",
       "FLAG_DOCUMENT_9                               -0.010376  \n",
       "FLAG_DOCUMENT_10                               0.002627  \n",
       "FLAG_DOCUMENT_11                              -0.032884  \n",
       "FLAG_DOCUMENT_12                              -0.002054  \n",
       "FLAG_DOCUMENT_13                              -0.033801  \n",
       "FLAG_DOCUMENT_14                              -0.033008  \n",
       "FLAG_DOCUMENT_15                              -0.018955  \n",
       "FLAG_DOCUMENT_16                              -0.048754  \n",
       "FLAG_DOCUMENT_17                              -0.009763  \n",
       "FLAG_DOCUMENT_18                              -0.047432  \n",
       "FLAG_DOCUMENT_19                              -0.007009  \n",
       "FLAG_DOCUMENT_20                              -0.012126  \n",
       "FLAG_DOCUMENT_21                              -0.005457  \n",
       "AMT_REQ_CREDIT_BUREAU_HOUR                    -0.004597  \n",
       "AMT_REQ_CREDIT_BUREAU_DAY                     -0.003355  \n",
       "AMT_REQ_CREDIT_BUREAU_WEEK                     0.018917  \n",
       "AMT_REQ_CREDIT_BUREAU_MON                     -0.004975  \n",
       "AMT_REQ_CREDIT_BUREAU_QRT                      0.076208  \n",
       "AMT_REQ_CREDIT_BUREAU_YEAR                     1.000000  \n",
       "\n",
       "[105 rows x 105 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(train.corr())\n",
    "pd.plotting.scatter_matrix(train, figsize=(12, 12))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see several features that essentially have 100% correlation with one another.  Including these feature pairs in some machine learning algorithms can create catastrophic problems, while in others it will only introduce minor redundancy and bias.  Let's remove one feature from each of the highly correlated pairs: Day Charge from the pair with Day Mins, Night Charge from the pair with Night Mins, Intl Charge from the pair with Intl Mins:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we've cleaned up our dataset, let's determine which algorithm to use.  As mentioned above, there appear to be some variables where both high and low (but not intermediate) values are predictive of churn.  In order to accommodate this in an algorithm like linear regression, we'd need to generate polynomial (or bucketed) terms.  Instead, let's attempt to model this problem using gradient boosted trees.  Amazon SageMaker provides an XGBoost container that we can use to train in a managed, distributed setting, and then host as a real-time prediction endpoint.  XGBoost uses gradient boosted trees which naturally account for non-linear relationships between features and the target variable, as well as accommodating complex interactions between features.\n",
    "\n",
    "Amazon SageMaker XGBoost can train on data in either a CSV or LibSVM format.  For this example, we'll stick with CSV.  It should:\n",
    "- Have the predictor variable in the first column\n",
    "- Not have a header row\n",
    "\n",
    "But first, let's convert our categorical features into numeric features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "model_data = pd.get_dummies(train)\n",
    "#model_data = pd.concat([model_data['Churn?_True.'], model_data.drop(['Churn?_False.', 'Churn?_True.'], axis=1)], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And now let's split the data into training, validation, and test sets.  This will help prevent us from overfitting the model, and allow us to test the models accuracy on data it hasn't already seen."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "train_data, validation_data, test_data = np.split(model_data.sample(frac=1, random_state=1729), [int(0.7 * len(model_data)), int(0.9 * len(model_data))])\n",
    "train_data.to_csv('train.csv', header=False, index=False)\n",
    "validation_data.to_csv('validation.csv', header=False, index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we'll upload these files to S3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "boto3.Session().resource('s3').Bucket(bucket).Object(os.path.join(prefix, 'train/train.csv')).upload_file('train.csv')\n",
    "boto3.Session().resource('s3').Bucket(bucket).Object(os.path.join(prefix, 'validation/validation.csv')).upload_file('validation.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "## Train\n",
    "\n",
    "Moving onto training, first we'll need to specify the locations of the XGBoost algorithm containers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sagemaker.amazon.amazon_estimator import get_image_uri\n",
    "container = get_image_uri(boto3.Session().region_name, 'xgboost')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then, because we're training with the CSV file format, we'll create `s3_input`s that our training function can use as a pointer to the files in S3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "s3_input_train = sagemaker.s3_input(s3_data='s3://{}/{}/train'.format(bucket, prefix), content_type='csv')\n",
    "s3_input_validation = sagemaker.s3_input(s3_data='s3://{}/{}/validation/'.format(bucket, prefix), content_type='csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we can specify a few parameters like what type of training instances we'd like to use and how many, as well as our XGBoost hyperparameters.  A few key hyperparameters are:\n",
    "- `max_depth` controls how deep each tree within the algorithm can be built.  Deeper trees can lead to better fit, but are more computationally expensive and can lead to overfitting.  There is typically some trade-off in model performance that needs to be explored between a large number of shallow trees and a smaller number of deeper trees.\n",
    "- `subsample` controls sampling of the training data.  This technique can help reduce overfitting, but setting it too low can also starve the model of data.\n",
    "- `num_round` controls the number of boosting rounds.  This is essentially the subsequent models that are trained using the residuals of previous iterations.  Again, more rounds should produce a better fit on the training data, but can be computationally expensive or lead to overfitting.\n",
    "- `eta` controls how aggressive each round of boosting is.  Larger values lead to more conservative boosting.\n",
    "- `gamma` controls how aggressively trees are grown.  Larger values lead to more conservative models.\n",
    "\n",
    "More detail on XGBoost's hyperparmeters can be found on their GitHub [page](https://github.com/dmlc/xgboost/blob/master/doc/parameter.md)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:sagemaker:Creating training-job with name: xgboost-2018-12-22-01-44-06-816\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2018-12-22 01:44:06 Starting - Starting the training job...\n",
      "2018-12-22 01:44:10 Starting - Launching requested ML instances......\n",
      "2018-12-22 01:45:08 Starting - Preparing the instances for training......\n",
      "2018-12-22 01:46:31 Downloading - Downloading input data\n",
      "2018-12-22 01:46:31 Training - Downloading the training image..\n",
      "\u001b[31mArguments: train\u001b[0m\n",
      "\u001b[31m[2018-12-22:01:46:40:INFO] Running standalone xgboost training.\u001b[0m\n",
      "\u001b[31m[2018-12-22:01:46:40:INFO] File size need to be processed in the node: 0.46mb. Available memory size in the node: 8406.08mb\u001b[0m\n",
      "\u001b[31m[2018-12-22:01:46:40:INFO] Determined delimiter of CSV input is ','\u001b[0m\n",
      "\u001b[31m[01:46:40] S3DistributionType set as FullyReplicated\u001b[0m\n",
      "\u001b[31m[01:46:40] 2333x69 matrix with 160977 entries loaded from /opt/ml/input/data/train?format=csv&label_column=0&delimiter=,\u001b[0m\n",
      "\u001b[31m[2018-12-22:01:46:40:INFO] Determined delimiter of CSV input is ','\u001b[0m\n",
      "\u001b[31m[01:46:40] S3DistributionType set as FullyReplicated\u001b[0m\n",
      "\u001b[31m[01:46:40] 666x69 matrix with 45954 entries loaded from /opt/ml/input/data/validation?format=csv&label_column=0&delimiter=,\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 22 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[0]#011train-error:0.058723#011validation-error:0.088589\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 18 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[1]#011train-error:0.051436#011validation-error:0.07958\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 22 extra nodes, 2 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[2]#011train-error:0.045864#011validation-error:0.073574\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 22 extra nodes, 2 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[3]#011train-error:0.046292#011validation-error:0.073574\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 22 extra nodes, 2 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[4]#011train-error:0.047578#011validation-error:0.072072\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 24 extra nodes, 2 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[5]#011train-error:0.045435#011validation-error:0.072072\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 20 extra nodes, 2 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[6]#011train-error:0.045006#011validation-error:0.073574\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 16 extra nodes, 6 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[7]#011train-error:0.043721#011validation-error:0.075075\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 18 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[8]#011train-error:0.042006#011validation-error:0.072072\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 16 extra nodes, 16 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[9]#011train-error:0.041149#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 12 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[10]#011train-error:0.039006#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 14 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[11]#011train-error:0.038148#011validation-error:0.064565\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 18 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[12]#011train-error:0.039006#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 8 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[13]#011train-error:0.038577#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 8 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[14]#011train-error:0.037291#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 10 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[15]#011train-error:0.037291#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 12 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[16]#011train-error:0.036862#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 20 extra nodes, 0 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[17]#011train-error:0.036434#011validation-error:0.064565\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 12 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[18]#011train-error:0.036005#011validation-error:0.064565\u001b[0m\n",
      "\u001b[31m[19]#011train-error:0.034291#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 6 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[20]#011train-error:0.034719#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 8 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[21]#011train-error:0.034291#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 6 extra nodes, 14 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[22]#011train-error:0.034291#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 12 extra nodes, 6 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[23]#011train-error:0.032576#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 6 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[24]#011train-error:0.032147#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 8 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[25]#011train-error:0.032147#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 14 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[26]#011train-error:0.031719#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 10 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[27]#011train-error:0.030862#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 6 extra nodes, 14 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[28]#011train-error:0.031719#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 10 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[29]#011train-error:0.03129#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[30]#011train-error:0.03129#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 4 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[31]#011train-error:0.030433#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 8 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[32]#011train-error:0.030433#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 12 extra nodes, 8 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[33]#011train-error:0.030862#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[34]#011train-error:0.030862#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:40] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 12 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[35]#011train-error:0.030862#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 2 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[36]#011train-error:0.029147#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 12 extra nodes, 6 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[37]#011train-error:0.029147#011validation-error:0.064565\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[38]#011train-error:0.029147#011validation-error:0.064565\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 22 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[39]#011train-error:0.029576#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[40]#011train-error:0.029147#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 12 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[41]#011train-error:0.030004#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 6 extra nodes, 12 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[42]#011train-error:0.02829#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[43]#011train-error:0.02829#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[44]#011train-error:0.02829#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 14 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[45]#011train-error:0.02829#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 12 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[46]#011train-error:0.02829#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[47]#011train-error:0.02829#011validation-error:0.070571\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 14 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[48]#011train-error:0.027432#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 6 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[49]#011train-error:0.027861#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[50]#011train-error:0.027432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 10 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[51]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[52]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[53]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[54]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[55]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[56]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[57]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[58]#011train-error:0.027432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[59]#011train-error:0.027004#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[60]#011train-error:0.027432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 10 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[61]#011train-error:0.027432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[62]#011train-error:0.027432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[63]#011train-error:0.027432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 8 extra nodes, 8 pruned nodes, max_depth=4\u001b[0m\n",
      "\u001b[31m[64]#011train-error:0.026147#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[65]#011train-error:0.026147#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[66]#011train-error:0.026147#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 10 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[67]#011train-error:0.026147#011validation-error:0.069069\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 6 extra nodes, 8 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[68]#011train-error:0.026147#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[69]#011train-error:0.026147#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[70]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[71]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 6 extra nodes, 12 pruned nodes, max_depth=3\u001b[0m\n",
      "\u001b[31m[72]#011train-error:0.025289#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[73]#011train-error:0.024003#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[74]#011train-error:0.024003#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[75]#011train-error:0.024003#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[76]#011train-error:0.024003#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[77]#011train-error:0.024432#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[78]#011train-error:0.025289#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[79]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[80]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 4 extra nodes, 14 pruned nodes, max_depth=2\u001b[0m\n",
      "\u001b[31m[81]#011train-error:0.025289#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[82]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 18 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[83]#011train-error:0.025289#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[84]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[85]#011train-error:0.025289#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[86]#011train-error:0.025289#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 10 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[87]#011train-error:0.024861#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[88]#011train-error:0.025289#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 10 extra nodes, 4 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[89]#011train-error:0.024003#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 20 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[90]#011train-error:0.024003#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 14 extra nodes, 0 pruned nodes, max_depth=5\u001b[0m\n",
      "\u001b[31m[91]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[92]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[93]#011train-error:0.025718#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 16 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[94]#011train-error:0.026147#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[95]#011train-error:0.026147#011validation-error:0.066066\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 4 extra nodes, 16 pruned nodes, max_depth=2\u001b[0m\n",
      "\u001b[31m[96]#011train-error:0.025289#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[97]#011train-error:0.025289#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 12 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[98]#011train-error:0.025289#011validation-error:0.067568\u001b[0m\n",
      "\u001b[31m[01:46:41] src/tree/updater_prune.cc:74: tree pruning end, 1 roots, 0 extra nodes, 14 pruned nodes, max_depth=0\u001b[0m\n",
      "\u001b[31m[99]#011train-error:0.024861#011validation-error:0.066066\u001b[0m\n",
      "\n",
      "2018-12-22 01:46:52 Uploading - Uploading generated training model\n",
      "2018-12-22 01:46:52 Completed - Training job completed\n",
      "Billable seconds: 43\n"
     ]
    }
   ],
   "source": [
    "sess = sagemaker.Session()\n",
    "\n",
    "xgb = sagemaker.estimator.Estimator(container,\n",
    "                                    role, \n",
    "                                    train_instance_count=1, \n",
    "                                    train_instance_type='ml.m4.xlarge',\n",
    "                                    output_path='s3://{}/{}/output'.format(bucket, prefix),\n",
    "                                    sagemaker_session=sess)\n",
    "xgb.set_hyperparameters(max_depth=5,\n",
    "                        eta=0.2,\n",
    "                        gamma=4,\n",
    "                        min_child_weight=6,\n",
    "                        subsample=0.8,\n",
    "                        silent=0,\n",
    "                        objective='binary:logistic',\n",
    "                        num_round=100)\n",
    "\n",
    "xgb.fit({'train': s3_input_train, 'validation': s3_input_validation}) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "## Host\n",
    "\n",
    "Now that we've trained the algorithm, let's create a model and deploy it to a hosted endpoint."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:sagemaker:Creating model with name: xgboost-2018-12-22-01-50-16-041\n",
      "INFO:sagemaker:Creating endpoint with name xgboost-2018-12-22-01-44-06-816\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------!"
     ]
    }
   ],
   "source": [
    "xgb_predictor = xgb.deploy(initial_instance_count=1,\n",
    "                           instance_type='ml.m4.xlarge')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Evaluate\n",
    "\n",
    "Now that we have a hosted endpoint running, we can make real-time predictions from our model very easily, simply by making an http POST request.  But first, we'll need to setup serializers and deserializers for passing our `test_data` NumPy arrays to the model behind the endpoint."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "xgb_predictor.content_type = 'text/csv'\n",
    "xgb_predictor.serializer = csv_serializer\n",
    "xgb_predictor.deserializer = None"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we'll use a simple function to:\n",
    "1. Loop over our test dataset\n",
    "1. Split it into mini-batches of rows \n",
    "1. Convert those mini-batchs to CSV string payloads\n",
    "1. Retrieve mini-batch predictions by invoking the XGBoost endpoint\n",
    "1. Collect predictions and convert from the CSV output our model provides into a NumPy array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def predict(data, rows=500):\n",
    "    split_array = np.array_split(data, int(data.shape[0] / float(rows) + 1))\n",
    "    predictions = ''\n",
    "    for array in split_array:\n",
    "        predictions = ','.join([predictions, xgb_predictor.predict(array).decode('utf-8')])\n",
    "\n",
    "    return np.fromstring(predictions[1:], sep=',')\n",
    "\n",
    "predictions = predict(test_data.as_matrix()[:, 1:])\n",
    "print(predictions)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are many ways to compare the performance of a machine learning model, but let's start by simply by comparing actual to predicted values.  In this case, we're simply predicting whether the customer churned (`1`) or not (`0`), which produces a simple confusion matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>predictions</th>\n",
       "      <th>0.0</th>\n",
       "      <th>1.0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>actual</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>282</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "predictions  0.0  1.0\n",
       "actual               \n",
       "0            282    4\n",
       "1              9   39"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(index=test_data.iloc[:, 0], columns=np.round(predictions), rownames=['actual'], colnames=['predictions'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "_Note, due to randomized elements of the algorithm, you results may differ slightly._\n",
    "\n",
    "Of the 48 churners, we've correctly predicted 39 of them (true positives). And, we incorrectly predicted 4 customers would churn who then ended up not doing so (false positives).  There are also 9 customers who ended up churning, that we predicted would not (false negatives).\n",
    "\n",
    "An important point here is that because of the `np.round()` function above we are using a simple threshold (or cutoff) of 0.5.  Our predictions from `xgboost` come out as continuous values between 0 and 1 and we force them into the binary classes that we began with.  However, because a customer that churns is expected to cost the company more than proactively trying to retain a customer who we think might churn, we should consider adjusting this cutoff.  That will almost certainly increase the number of false positives, but it can also be expected to increase the number of true positives and reduce the number of false negatives.\n",
    "\n",
    "To get a rough intuition here, let's look at the continuous values of our predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXoAAAD8CAYAAAB5Pm/hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAADn1JREFUeJzt3XGsZOVdxvHvU7bFKCjg3m5wWby1WRK3NQK5QUyN0mBauk1YGg1ZkpYtIW5TwbRKTGj9o42GhEahsUmlboV0a9oC2lY2KVpxxZAaob1QpLCIXWEpuy7sbakUQ0SBn3/MgY64uzP3zsyde9/9fpLJnPOe98z5vXvnPvfMO2dmU1VIktr1mmkXIEmaLINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1Lg10y4AYO3atTU7OzvtMiRpVbn33nu/W1Uzg/qtiKCfnZ1lfn5+2mVI0qqS5PFh+jl1I0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjVsRn4wdxezVX5nasfdd+86pHVuShuUZvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxA4M+yYYkdybZk+ShJB/o2j+a5ECS+7vb5r59PpRkb5JHkrx9kgOQJB3dMJ+MfQG4qqruS3IicG+SO7ptH6+qP+rvnGQTsBV4E/BTwN8lOaOqXhxn4ZKk4Qw8o6+qg1V1X7f8LPAwsP4ou2wBbq6q56vqMWAvcM44ipUkLd6i5uiTzAJnAfd0TVcmeSDJTUlO7trWA0/07bafw/xhSLI9yXyS+YWFhUUXLkkaztBBn+QE4IvAB6vqB8ANwBuBM4GDwHWLOXBV7aiquaqam5mZWcyukqRFGCrok7yWXsh/rqq+BFBVT1XVi1X1EvBpfjg9cwDY0Lf7aV2bJGkKhrnqJsCNwMNVdX1f+6l93d4FPNgt7wK2Jjk+yRuAjcDXx1eyJGkxhrnq5i3Ae4BvJbm/a/swcEmSM4EC9gHvA6iqh5LcCuyhd8XOFV5xI0nTMzDoq+prQA6z6faj7HMNcM0IdUmSxsRPxkpS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNW5g0CfZkOTOJHuSPJTkA137KUnuSPLt7v7krj1JPpFkb5IHkpw96UFIko5smDP6F4CrqmoTcC5wRZJNwNXA7qraCOzu1gHeAWzsbtuBG8ZetSRpaAODvqoOVtV93fKzwMPAemALsLPrthO4qFveAny2eu4GTkpy6tgrlyQNZVFz9ElmgbOAe4B1VXWw2/QksK5bXg880bfb/q5NkjQFQwd9khOALwIfrKof9G+rqgJqMQdOsj3JfJL5hYWFxewqSVqEoYI+yWvphfznqupLXfNTL0/JdPeHuvYDwIa+3U/r2v6PqtpRVXNVNTczM7PU+iVJAwxz1U2AG4GHq+r6vk27gG3d8jbgtr72S7urb84Fnumb4pEkLbM1Q/R5C/Ae4FtJ7u/aPgxcC9ya5HLgceDibtvtwGZgL/AccNlYK5YkLcrAoK+qrwE5wubzD9O/gCtGrEuSNCZ+MlaSGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1bmDQJ7kpyaEkD/a1fTTJgST3d7fNfds+lGRvkkeSvH1ShUuShjPMGf1ngAsO0/7xqjqzu90OkGQTsBV4U7fPnyQ5blzFSpIWb2DQV9VdwNNDPt4W4Oaqer6qHgP2AueMUJ8kaUSjzNFfmeSBbmrn5K5tPfBEX5/9XZskaUqWGvQ3AG8EzgQOAtct9gGSbE8yn2R+YWFhiWVIkgZZUtBX1VNV9WJVvQR8mh9OzxwANvR1Pa1rO9xj7Kiquaqam5mZWUoZkqQhLCnok5zat/ou4OUrcnYBW5Mcn+QNwEbg66OVKEkaxZpBHZJ8ATgPWJtkP/AR4LwkZwIF7APeB1BVDyW5FdgDvABcUVUvTqZ0SdIwBgZ9VV1ymOYbj9L/GuCaUYqSJI2Pn4yVpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjRsY9EluSnIoyYN9backuSPJt7v7k7v2JPlEkr1JHkhy9iSLlyQNNswZ/WeAC17VdjWwu6o2Aru7dYB3ABu723bghvGUKUlaqoFBX1V3AU+/qnkLsLNb3glc1Nf+2eq5GzgpyanjKlaStHhLnaNfV1UHu+UngXXd8nrgib5++7s2SdKUjPxmbFUVUIvdL8n2JPNJ5hcWFkYtQ5J0BEsN+qdenpLp7g917QeADX39Tuva/p+q2lFVc1U1NzMzs8QyJEmDLDXodwHbuuVtwG197Zd2V9+cCzzTN8UjSZqCNYM6JPkCcB6wNsl+4CPAtcCtSS4HHgcu7rrfDmwG9gLPAZdNoGZJ0iIMDPqquuQIm84/TN8Crhi1KEnS+PjJWElqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktS4NaPsnGQf8CzwIvBCVc0lOQW4BZgF9gEXV9X3RytTkrRU4zijf2tVnVlVc9361cDuqtoI7O7WJUlTMompmy3Azm55J3DRBI4hSRrSqEFfwN8muTfJ9q5tXVUd7JafBNaNeAxJ0ghGmqMHfqmqDiR5PXBHkn/p31hVlaQOt2P3h2E7wOmnnz5iGZKkIxnpjL6qDnT3h4AvA+cATyU5FaC7P3SEfXdU1VxVzc3MzIxShiTpKJYc9El+LMmJLy8DbwMeBHYB27pu24DbRi1SkrR0o0zdrAO+nOTlx/l8Vf1Nkm8Atya5HHgcuHj0MiVJS7XkoK+qR4GfP0z794DzRylKkjQ+fjJWkhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1bs20C5CkaZu9+itTO/a+a9858WMY9COY1pNjOZ4Yktph0EtaMaZ5Zt0y5+glqXEGvSQ1zqCXpMY5R78KtX6FgKTx8oxekho3sTP6JBcAfwwcB/xZVV07qWNJk+SVIFrtJnJGn+Q44JPAO4BNwCVJNk3iWJKko5vUGf05wN6qehQgyc3AFmDPhI6nxnlWLS3dpIJ+PfBE3/p+4BcmdCwtIwNXWn2mdtVNku3A9m71P5M8ssiHWAt8d7xVrQqO+9hyLI77mBpzPvbK4lLG/dPDdJpU0B8ANvStn9a1vaKqdgA7lnqAJPNVNbfU/Vcrx31sORbHfSyOGSY77kldXvkNYGOSNyR5HbAV2DWhY0mSjmIiZ/RV9UKSK4Gv0ru88qaqemgSx5IkHd3E5uir6nbg9kk9PiNM+6xyjvvYciyO+1gcM0xw3KmqST22JGkF8CsQJKlxKz7ok1yQ5JEke5NcfZjtxye5pdt+T5LZ5a9y/IYY9+8k2ZPkgSS7kwx1mdVKN2jcff1+LUklWfVXZwwz5iQXdz/vh5J8frlrnIQhnuOnJ7kzyTe75/nmadQ5TkluSnIoyYNH2J4kn+j+TR5IcvZYDlxVK/ZG743cfwN+Bngd8M/Aplf1+U3gU93yVuCWade9TON+K/Cj3fL7j5Vxd/1OBO4C7gbmpl33MvysNwLfBE7u1l8/7bqXadw7gPd3y5uAfdOuewzj/mXgbODBI2zfDPw1EOBc4J5xHHeln9G/8lUKVfXfwMtfpdBvC7CzW/5L4PwkWcYaJ2HguKvqzqp6rlu9m95nFVa7YX7eAH8AfAz4r+UsbkKGGfNvAJ+squ8DVNWhZa5xEoYZdwE/3i3/BPDvy1jfRFTVXcDTR+myBfhs9dwNnJTk1FGPu9KD/nBfpbD+SH2q6gXgGeAnl6W6yRlm3P0up3cWsNoNHHf3UnZDVbXyXQzD/KzPAM5I8o9J7u6+GXa1G2bcHwXenWQ/vSv4fmt5Spuqxf7uD8X/eGSVS/JuYA74lWnXMmlJXgNcD7x3yqUstzX0pm/Oo/fK7a4kP1dV/zHVqibvEuAzVXVdkl8E/jzJm6vqpWkXttqs9DP6gV+l0N8nyRp6L/G+tyzVTc4w4ybJrwK/B1xYVc8vU22TNGjcJwJvBv4hyT56c5i7VvkbssP8rPcDu6rqf6rqMeBf6QX/ajbMuC8HbgWoqn8CfoTe98G0bKjf/cVa6UE/zFcp7AK2dcu/Dvx9de9qrGIDx53kLOBP6YV8C3O2MGDcVfVMVa2tqtmqmqX33sSFVTU/nXLHYpjn+F/RO5snyVp6UzmPLmeREzDMuL8DnA+Q5GfpBf3Csla5/HYBl3ZX35wLPFNVB0d90BU9dVNH+CqFJL8PzFfVLuBGei/p9tJ7k2Pr9CoejyHH/YfACcBfdO89f6eqLpxa0WMw5LibMuSYvwq8Lcke4EXgd6tqVb9qHXLcVwGfTvLb9N6Yfe9qP4lL8gV6f7TXdu89fAR4LUBVfYreexGbgb3Ac8BlYznuKv93kyQNsNKnbiRJIzLoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklq3P8CDDWs9JNsG7cAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(predictions)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The continuous valued predictions coming from our model tend to skew toward 0 or 1, but there is sufficient mass between 0.1 and 0.9 that adjusting the cutoff should indeed shift a number of customers' predictions.  For example..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>col_0</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Churn?_True.</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>279</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "col_0           0   1\n",
       "Churn?_True.         \n",
       "0             279   7\n",
       "1               8  40"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(index=test_data.iloc[:, 0], columns=np.where(predictions > 0.3, 1, 0))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that changing the cutoff from 0.5 to 0.3 results in 1 more true positives, 3 more false positives, and 1 fewer false negatives.  The numbers are small overall here, but that's 6-10% of customers overall that are shifting because of a change to the cutoff.  Was this the right decision?  We may end up retaining 3 extra customers, but we also unnecessarily incentivized 5 more customers who would have stayed.  Determining optimal cutoffs is a key step in properly applying machine learning in a real-world setting.  Let's discuss this more broadly and then apply a specific, hypothetical solution for our current problem.\n",
    "\n",
    "### Relative cost of errors\n",
    "\n",
    "Any practical binary classification problem is likely to produce a similarly sensitive cutoff. That by itself isn’t a problem. After all, if the scores for two classes are really easy to separate, the problem probably isn’t very hard to begin with and might even be solvable with simple rules instead of ML.\n",
    "\n",
    "More important, if I put an ML model into production, there are costs associated with the model erroneously assigning false positives and false negatives. I also need to look at similar costs associated with correct predictions of true positives and true negatives.  Because the choice of the cutoff affects all four of these statistics, I need to consider the relative costs to the business for each of these four outcomes for each prediction.\n",
    "\n",
    "#### Assigning costs\n",
    "\n",
    "What are the costs for our problem of mobile operator churn? The costs, of course, depend on the specific actions that the business takes. Let's make some assumptions here.\n",
    "\n",
    "First, assign the true negatives the cost of \\$0. Our model essentially correctly identified a happy customer in this case, and we don’t need to do anything.\n",
    "\n",
    "False negatives are the most problematic, because they incorrectly predict that a churning customer will stay. We lose the customer and will have to pay all the costs of acquiring a replacement customer, including foregone revenue, advertising costs, administrative costs, point of sale costs, and likely a phone hardware subsidy. A quick search on the Internet reveals that such costs typically run in the hundreds of dollars so, for the purposes of this example, let's assume \\$500. This is the cost of false negatives.\n",
    "\n",
    "Finally, for customers that our model identifies as churning, let's assume a retention incentive in the amount of \\$100. If my provider offered me such a concession, I’d certainly think twice before leaving. This is the cost of both true positive and false positive outcomes. In the case of false positives (the customer is happy, but the model mistakenly predicted churn), we will “waste” the \\$100 concession. We probably could have spent that \\$100 more effectively, but it's possible we increased the loyalty of an already loyal customer, so that’s not so bad."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Finding the optimal cutoff\n",
    "\n",
    "It’s clear that false negatives are substantially more costly than false positives. Instead of optimizing for error based on the number of customers, we should be minimizing a cost function that looks like this:\n",
    "\n",
    "```txt\n",
    "$500 * FN(C) + $0 * TN(C) + $100 * FP(C) + $100 * TP(C)\n",
    "```\n",
    "\n",
    "FN(C) means that the false negative percentage is a function of the cutoff, C, and similar for TN, FP, and TP.  We need to find the cutoff, C, where the result of the expression is smallest.\n",
    "\n",
    "A straightforward way to do this, is to simply run a simulation over a large number of possible cutoffs.  We test 100 possible values in the for loop below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cost is minimized near a cutoff of: 0.46 for a cost of: 8400\n"
     ]
    }
   ],
   "source": [
    "cutoffs = np.arange(0.01, 1, 0.01)\n",
    "costs = []\n",
    "for c in cutoffs:\n",
    "    costs.append(np.sum(np.sum(np.array([[0, 100], [500, 100]]) * \n",
    "                               pd.crosstab(index=test_data.iloc[:, 0], \n",
    "                                           columns=np.where(predictions > c, 1, 0)))))\n",
    "\n",
    "costs = np.array(costs)\n",
    "plt.plot(cutoffs, costs)\n",
    "plt.show()\n",
    "print('Cost is minimized near a cutoff of:', cutoffs[np.argmin(costs)], 'for a cost of:', np.min(costs))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above chart shows how picking a threshold too low results in costs skyrocketing as all customers are given a retention incentive.  Meanwhile, setting the threshold too high results in too many lost customers, which ultimately grows to be nearly as costly.  The overall cost can be minimized at \\$8400 by setting the cutoff to 0.46, which is substantially better than the \\$20k+ I would expect to lose by not taking any action."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "## Extensions\n",
    "\n",
    "This notebook showcased how to build a model that predicts whether a customer is likely to churn, and then how to optimally set a threshold that accounts for the cost of true positives, false positives, and false negatives.  There are several means of extending it including:\n",
    "- Some customers who receive retention incentives will still churn.  Including a probability of churning despite receiving an incentive in our cost function would provide a better ROI on our retention programs.\n",
    "- Customers who switch to a lower-priced plan or who deactivate a paid feature represent different kinds of churn that could be modeled separately.\n",
    "- Modeling the evolution of customer behavior. If usage is dropping and the number of calls placed to Customer Service is increasing, you are more likely to experience churn then if the trend is the opposite. A customer profile should incorporate behavior trends.\n",
    "- Actual training data and monetary cost assignments could be more complex.\n",
    "- Multiple models for each type of churn could be needed.\n",
    "\n",
    "Regardless of additional complexity, similar principles described in this notebook are likely apply."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (Optional) Clean-up\n",
    "\n",
    "If you're ready to be done with this notebook, please run the cell below.  This will remove the hosted endpoint you created and avoid any charges from a stray instance being left on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:sagemaker:Deleting endpoint with name: xgboost-2018-12-22-01-44-06-816\n"
     ]
    }
   ],
   "source": [
    "sagemaker.Session().delete_endpoint(xgb_predictor.endpoint)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "conda_python3",
   "language": "python",
   "name": "conda_python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  },
  "notice": "Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/apache2.0/ or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
